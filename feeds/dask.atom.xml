<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Marginally Stable</title><link href="/" rel="alternate"></link><link href="/feeds/dask.atom.xml" rel="self"></link><id>/</id><updated>2016-07-19T14:30:00-05:00</updated><entry><title>Dask and Scikit-Learn -- Data Parallelism</title><link href="/dask-sklearn-part-2.html" rel="alternate"></link><published>2016-07-19T14:30:00-05:00</published><author><name>Jim Crist</name></author><id>tag:,2016-07-19:dask-sklearn-part-2.html</id><summary type="html">&lt;p&gt;This is part 2 of a series of posts discussing recent work with dask and
scikit-learn. &lt;a href="/dask-sklearn-part-1.html"&gt;In the last post&lt;/a&gt; we discussed
model-parallelism &amp;mdash; fitting several models across the same data. In this
post we'll look into simple patterns for data-parallelism, which will allow
fitting a single model on larger datasets.&lt;/p&gt;
&lt;h2&gt;Scaling scikit-learn&lt;/h2&gt;
&lt;p&gt;Scikit-learn contains several tools for working with large datasets. The best
way to learn about them is to check out the &lt;a href="http://scikit-learn.org/stable/modules/scaling_strategies.html"&gt;excellent
documentation&lt;/a&gt;.
In short, scikit-learn's approach needs three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A way to incrementally load data&lt;/li&gt;
&lt;li&gt;A way to efficiently extract features (such as &lt;code&gt;HashingVectorizer&lt;/code&gt; and &lt;code&gt;FeatureHasher&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;An incremental learning algorithm (estimators that implement &lt;code&gt;partial_fit&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Applied together these allow scikit-learn to do out-of-core learning (working
with data that doesn't fit in RAM). This works well in practice, but does
present a few issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Incremental learning is an inherently serial operation &amp;mdash; the samples are
  streamed through the estimator updating the coefficients incrementally. Often
  some of the preprocessing/feature-extraction steps can be parallelized,
  something scikit-learn doesn't make easy to do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There's a disconnect between in memory estimators, which can be used with
  &lt;code&gt;GridSearchCV&lt;/code&gt;, and incrememental estimators which can't. If you want to
  optimize hyperparameters when using &lt;code&gt;partial_fit&lt;/code&gt; you currently have to
  implement that part yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are other methods of dealing with larger datasets. One common method is
  model averaging, where the same model is fit on many partitions, and the
  resulting coefficients are averaged together at the end. This is presented in
  &lt;a href="https://speakerdeck.com/ogrisel/scaling-machine-learning-in-python?slide=29"&gt;a few&lt;/a&gt; &lt;a href="https://github.com/ogrisel/parallel_ml_tutorial/blob/master/notebooks/08%20-%20Large%20Scale%20Text%20Classification%20for%20Sentiment%20Analysis.ipynb"&gt;scikit-learn
  presentations&lt;/a&gt;,
  but not implemented in a builtin way anywhere (yet).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To demonstrate dask-learn's approach to solving these issues, we'll reproduce
&lt;a href="http://scikit-learn.org/stable/auto_examples/applications/plot_out_of_core_classification.html"&gt;this text classification
example&lt;/a&gt;
from the scikit-learn docs.&lt;/p&gt;
&lt;h2&gt;Out-of-core classification of text documents using &lt;code&gt;dask-learn&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This example uses the &lt;a href="https://archive.ics.uci.edu/ml/datasets/Reuters-21578+Text+Categorization+Collection"&gt;Reuters-21578
collection&lt;/a&gt;,
as taken from the UCI ML repository. This is a collection of documents taken
from the Reuters newswire in 1987. Each document is labeled with a category
describing its content (e.g. "acq").&lt;/p&gt;
&lt;h3&gt;Preprocessing&lt;/h3&gt;
&lt;p&gt;Following the scikit-learn example, we'll copy-paste in their subclass of
&lt;code&gt;HTMLParser&lt;/code&gt;. This is used for parsing the the &lt;code&gt;.sgm&lt;/code&gt; files and yielding them
one at a time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.externals.six.moves&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;html_parser&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.externals.six.moves&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReutersParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html_parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTMLParser&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Utility class to parse a SGML file and yield documents one at a time.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latin-1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;html_parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTMLParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_starttag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;start_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;
        &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_endtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;end_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;
        &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_reset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topic_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topic_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topic_d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topic_d&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_reuters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_reuters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;r&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topics&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_topics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_topics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topic_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_topic_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topic_d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topic_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using that parser, we can create a few preprocessing functions for extracting
features and targets. We'll then apply these functions to each file/document
using the &lt;a href="http://dask.pydata.org/en/latest/bag.html"&gt;dask.bag&lt;/a&gt; interface. At
the end of this process we'll have a &lt;code&gt;dask.bag.Bag&lt;/code&gt; containing the title and
body of each document as text &amp;mdash; this will be our feature matrix. We'll
also have a &lt;code&gt;dklearn.matrix.Matrix&lt;/code&gt; of booleans indicating whether the document
is labeled with the &lt;code&gt;"acq"&lt;/code&gt; topic &amp;mdash; this will be our target matrix. We'll
then learn a binary classification problem to determine from the document text
whether the document is in the &lt;code&gt;"acq"&lt;/code&gt; class.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dask.bag&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;db&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dklearn.matrix&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;dm&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;file_to_documents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Given a filename, yield documents&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ReutersParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_empty_topics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Remove all docs that don&amp;#39;t have a topic&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;documents_to_X_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Extract the text to use as features&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;{title}&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s1"&gt;{body}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;documents_to_y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos_class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;acq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Create an array indicating whether ``pos_class`` is in the&lt;/span&gt;
&lt;span class="sd"&gt;    topics for each document.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pos_class&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;i1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reuters&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*.sgm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_to_documents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remove_empty_topics&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;X_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;documents_to_X_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_bag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;documents_to_y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;i1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Extract train-test splits&lt;/h3&gt;
&lt;p&gt;To validate our fit estimators, we'll need to hold back a sample of data to use
for testing. To do that, we can use the &lt;code&gt;train_test_split&lt;/code&gt; function, which
mirrors the &lt;a href="http://scikit-learn.org/stable/modules/generated/sklearn.cross_validation.train_test_split.html"&gt;scikit-learn function of the same
name&lt;/a&gt;.
We'll hold back &lt;code&gt;20%&lt;/code&gt; of the data to use as a test set.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dklearn.cross_validation&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;

&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Feature Extraction&lt;/h3&gt;
&lt;p&gt;We can't train directly on the text data, we first need to extract it out into
a matrix of features. Continuing to mirror the scikit-learn example, we'll use
a
&lt;a href="http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html"&gt;HashingVectorizer&lt;/a&gt;.
This is a stateless transformer that maps tokens to integers using a hash
function, and results in a sparse matrix of occurrence counts for each token.
Since it's stateless it works well with out-of-core or streaming data, and the
transform can be trivially mapped across all partitions. As a dask graph, this
looks something like:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/parallel_graph.svg" alt="HashingVectorizer graph" style="width:40%"&gt;&lt;/p&gt;
&lt;p&gt;To do this mapping automatically, we've implemented a simple wrapper in
dask-learn.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dklearn.feature_extraction&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HashingVectorizer&lt;/span&gt;

&lt;span class="n"&gt;vectorizer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HashingVectorizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decode_error&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                               &lt;span class="n"&gt;n_features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                               &lt;span class="n"&gt;non_negative&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Parallelization patterns&lt;/h3&gt;
&lt;p&gt;Dask-learn contains several parallelization patterns for wrapping scikit-learn
estimators. Here we'll create a &lt;code&gt;Pipeline&lt;/code&gt; for each pattern, which we will
later fit.&lt;/p&gt;
&lt;h4&gt;Chained&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Chained&lt;/code&gt; is for use with estimators that implement the &lt;code&gt;partial_fit&lt;/code&gt; method,
and implements "&lt;code&gt;partial_fit&lt;/code&gt; chaining". When the &lt;code&gt;Chained.fit&lt;/code&gt; method is
called, a graph is created that calls &lt;code&gt;partial_fit&lt;/code&gt; iteratively on each chunk.
As a dask graph, this looks something like:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/chained_graph.svg" alt="Chained.fit graph" style="width:100%"&gt;&lt;/p&gt;
&lt;p&gt;We'll create a &lt;code&gt;Pipeline&lt;/code&gt; that first transforms the input using the
&lt;code&gt;HashingVectorizer&lt;/code&gt; created above, and then follows it with a &lt;code&gt;SGDClassifier&lt;/code&gt;
wrapped with &lt;code&gt;Chained&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Chained&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.linear_model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SGDClassifier&lt;/span&gt;

&lt;span class="n"&gt;pipe1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;vect&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vectorizer&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sgd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Chained&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SGDClassifier&lt;/span&gt;&lt;span class="p"&gt;()))])&lt;/span&gt;
&lt;span class="n"&gt;pipe1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Pipeline(steps=[(&amp;#39;vect&amp;#39;, HashingVectorizer(analyzer=u&amp;#39;word&amp;#39;, binary=False, decode_error=&amp;#39;ignore&amp;#39;,
         dtype=&amp;lt;type &amp;#39;numpy.float64&amp;#39;&amp;gt;, encoding=u&amp;#39;utf-8&amp;#39;, input=u&amp;#39;content&amp;#39;,
         lowercase=True, n_features=262144, ngram_range=(1, 1),
         non_negative=True, norm=u&amp;#39;l2&amp;#39;, preprocessor=None, stop_words=N...2&amp;#39;, power_t=0.5,
         random_state=None, shuffle=True,verbose=0,
         warm_start=False)))])
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;h4&gt;Averaged&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Averaged&lt;/code&gt; fits the same estimator on each chunk in parallel, and then averages
the coefficients together at the end. This is a simple way to deal with larger
data, and is discussed in more detail &lt;a href="https://github.com/ogrisel/parallel_ml_tutorial/blob/master/notebooks/08%20-%20Large%20Scale%20Text%20Classification%20for%20Sentiment%20Analysis.ipynb"&gt;in this notebook from Olivier
Grisel&lt;/a&gt;.
As a dask graph, this looks something like:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/averaged_graph.svg" alt="Averaged.fit graph" style="width:80%"&gt;&lt;/p&gt;
&lt;p&gt;We'll create a &lt;code&gt;Pipeline&lt;/code&gt; as before, but this time fitting a
&lt;code&gt;LogisticRegression&lt;/code&gt; wrapped with &lt;code&gt;Averaged&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Averaged&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.linear_model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LogisticRegression&lt;/span&gt;

&lt;span class="n"&gt;pipe2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;vect&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vectorizer&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;logistic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Averaged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LogisticRegression&lt;/span&gt;&lt;span class="p"&gt;()))])&lt;/span&gt;
&lt;span class="n"&gt;pipe2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Pipeline(steps=[(&amp;#39;vect&amp;#39;, HashingVectorizer(analyzer=u&amp;#39;word&amp;#39;, binary=False, decode_error=&amp;#39;ignore&amp;#39;,
         dtype=&amp;lt;type &amp;#39;numpy.float64&amp;#39;&amp;gt;, encoding=u&amp;#39;utf-8&amp;#39;, input=u&amp;#39;content&amp;#39;,
         lowercase=True, n_features=262144, ngram_range=(1, 1),
         non_negative=True, norm=u&amp;#39;l2&amp;#39;, preprocessor=None, stop_words=N...ty=&amp;#39;l2&amp;#39;, random_state=None,
         solver=&amp;#39;liblinear&amp;#39;, tol=0.0001,verbose=0, warm_start=False)))])
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;h3&gt;A closer look at dask-learn estimators&lt;/h3&gt;
&lt;p&gt;It should be noted that the estimators from dask-learn created above
(&lt;code&gt;Chained&lt;/code&gt;, &lt;code&gt;Averaged&lt;/code&gt;, &lt;code&gt;Pipeline&lt;/code&gt;, etc...) are actual scikit-learn estimators,
all deriving from the same &lt;code&gt;sklearn.base.BaseEstimator&lt;/code&gt; class. They implement
many of the common scikit-learn methods, work with &lt;code&gt;sklearn.clone&lt;/code&gt;, and repr
the same. However, all operations on them are &lt;em&gt;lazy&lt;/em&gt; and &lt;em&gt;pure&lt;/em&gt;. This means two
things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Methods such as &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;set_params&lt;/code&gt; return a new estimator rather than
  mutating the estimator in place. This means that you need to do &lt;code&gt;fit_est =
  est.fit(X, y)&lt;/code&gt; instead of &lt;code&gt;est.fit(X, y)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With a few exceptions (&lt;code&gt;get_params&lt;/code&gt;, and &lt;code&gt;__getattr__&lt;/code&gt;), all operations on
  the estimators are done lazily, building a dask graph behind the scenes. This
  means that to actually perform the fit/predict/score/etc... you need to call
  the &lt;code&gt;compute&lt;/code&gt; method. This matches the same interface as the main dask
  collections (array, bag, dataframe, etc...).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These design decisions were made to make the code easier to reason about &amp;mdash;
trying to determine the result of lazy-mutable operations proved to be quite
tricky. A benefit of the laziness is that multiple estimators can be fit at the
same time sharing intermediates (as show in &lt;a href="/dask-sklearn-part-1.html"&gt;the previous
post&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;Fitting and scoring the estimators&lt;/h3&gt;
&lt;p&gt;Here we'll fit and score both estimators. Remember this is all done lazily, so
no actual work will be done until we call &lt;code&gt;compute&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;fit1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipe1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sgd__classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;score1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fit1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fit2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipe2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;score2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fit2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the chained pipeline received a &lt;code&gt;classes&lt;/code&gt; keyword to &lt;code&gt;fit&lt;/code&gt;. This is
because &lt;code&gt;partial_fit&lt;/code&gt; requires the keyword on the first call. If it wasn't
provided, the classes would be determined automatically, but this is less
efficient. The &lt;code&gt;Averaged&lt;/code&gt; estimator doesn't have this restriction.&lt;/p&gt;
&lt;p&gt;To do the actual fitting, we'll pass both the fit estimators and scores to
&lt;code&gt;dask.compute&lt;/code&gt;. This will merge all the graphs together, allowing intermediates
to be shared. This entire graph contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All preprocessing steps&lt;/li&gt;
&lt;li&gt;Train-test splitting&lt;/li&gt;
&lt;li&gt;Both pipeline fits (&lt;code&gt;Averaged&lt;/code&gt; and &lt;code&gt;Chained&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Estimator scoring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/merged_averaged_chained_graph.png" alt="Chained.fit graph" style="width:100%"&gt;&lt;/p&gt;
&lt;p&gt;We'll also use the profiling functionality provided in
&lt;a href="http://dask.pydata.org/en/latest/diagnostics.html"&gt;dask.diagnostics&lt;/a&gt; to
measure performance.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dask.diagnostics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ResourceProfiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Profiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ProgressBar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;visualize&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dask.multiprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;mp_get&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;compute&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;ResourceProfiler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;rprof&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Profiler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;prof&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ProgressBar&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;fit1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fit2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;score1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;score2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fit1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fit2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;score1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;score2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                         &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mp_get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_workers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[########################################] | 100% Completed |  7.8s
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;score1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.96392016376663259    # The score for the Chained(SGDClassifier())
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;score2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.87871033776867968    # The score for the Averaged(LogisticRegression())
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;From these scores, it seems that the &lt;code&gt;Chained(SGDClassifier())&lt;/code&gt; pipeline
performs better for this text classification problem. Now let's look at the
profile plot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;visualize&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;prof&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rprof&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;Bokeh Plot&lt;/title&gt;&lt;/p&gt;
&lt;p&gt;&lt;link rel="stylesheet" href="https://cdn.pydata.org/bokeh/release/bokeh-0.12.0.min.css" type="text/css" /&gt;&lt;/p&gt;
&lt;script type="text/javascript" src="https://cdn.pydata.org/bokeh/release/bokeh-0.12.0.min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;
    Bokeh.set_log_level("info");
&lt;/script&gt;

&lt;style&gt;
html {
width: 100%;
height: 100%;
}
body {
width: 90%;
height: 100%;
margin: auto;
}
&lt;/style&gt;

&lt;p&gt;&lt;/head&gt;
&lt;body&gt;&lt;/p&gt;
&lt;div class="bk-root"&gt;
    &lt;div class="plotdiv" id="908f8375-28cf-4e21-a6e3-f4d38a24b8ab"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script type="text/javascript"&gt;
    Bokeh.$(function() {
    var docs_json = {"f2e1dae7-cba6-43f7-9512-bc078f836ed4":{"roots":{"references":[{"attributes":{"grid_line_color":{"value":null},"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"},"ticker":{"id":"d2ea5d69-9bd3-4cb3-8bc9-144c4897d54e","type":"BasicTicker"}},"id":"5657fbc3-a056-4d4a-b5de-e1860617ba2e","type":"Grid"},{"attributes":{"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"}},"id":"c3300d7b-9212-418b-a13c-7ecae98f2e88","type":"SaveTool"},{"attributes":{},"id":"94998d1c-c416-40d6-8527-52fa5fcdf861","type":"BasicTicker"},{"attributes":{"axis_label":"Memory (MB)","formatter":{"id":"d705e261-f6d8-4cd3-986f-c29182ef51a7","type":"BasicTickFormatter"},"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"},"ticker":{"id":"4e19cc51-5753-47fc-82aa-179c4193ff29","type":"BasicTicker"},"y_range_name":"memory"},"id":"2c24462d-d7ab-4829-b1dc-907407db059f","type":"LinearAxis"},{"attributes":{"axis_label":"Worker ID","axis_line_color":{"value":null},"formatter":{"id":"9dbba22c-beab-4b7c-a94d-455ac5758fc3","type":"CategoricalTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"},"ticker":{"id":"0122f427-3500-4986-bf0e-0d8627ec2b89","type":"CategoricalTicker"}},"id":"7f6e1d30-46f4-4b86-8564-9e529fa1e3f8","type":"CategoricalAxis"},{"attributes":{"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"}},"id":"bacd5ad1-3ddd-46db-90ef-850a41d8a87a","type":"ResizeTool"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[107.405312,207.396864,329.351168,408.690688,415.141888,432.96768,449.88416,434.573312,456.040448,462.45888,476.049408,482.648064,549.711872,560.427008,569.905152,672.661504]}},"id":"8b4e092d-d328-4d98-b1f2-85448a0874cb","type":"ColumnDataSource"},{"attributes":{"children":[{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"}]},"id":"56a4d265-d18a-47c7-839d-73831931821d","type":"Row"},{"attributes":{},"id":"49c74b54-51fa-4156-acf1-bf95b5be42b7","type":"BasicTicker"},{"attributes":{},"id":"7a97d14d-4e29-4e39-8fea-73c2bc27a141","type":"CategoricalTicker"},{"attributes":{"fill_color":{"field":"color"},"height":{"units":"data","value":1},"line_color":{"value":"gray"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"1e295287-e53d-45ec-b47f-76e8d45a0dbe","type":"Rect"},{"attributes":{"dimensions":["width"],"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"}},"id":"dea74d07-bbfd-4335-a2db-4c46258ecf81","type":"WheelZoomTool"},{"attributes":{"line_color":{"value":"#253494"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"3c69d89e-8baf-4b85-bf1c-d712031cb607","type":"Line"},{"attributes":{},"id":"3145f072-2fa9-4818-9ad1-771a81a71dae","type":"BasicTickFormatter"},{"attributes":{"dimensions":["width"],"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}},"id":"42c855ab-6ad3-416b-b320-651d85d2eceb","type":"WheelZoomTool"},{"attributes":{"plot":null,"text":"Profile Results"},"id":"102cd826-c761-4cad-b934-ec7a74da36d3","type":"Title"},{"attributes":{"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}},"id":"e4feebc5-f88a-4ab0-a499-568dfedc9fd1","type":"SaveTool"},{"attributes":{"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"}},"id":"087346fc-3399-4c91-9a27-ef591ac70fd0","type":"ResizeTool"},{"attributes":{"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"}},"id":"32e95189-6811-45c2-9cf6-016582d9551e","type":"SaveTool"},{"attributes":{"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}},"id":"9e504ca5-f977-4231-969b-462c07ef05f1","type":"ResizeTool"},{"attributes":{"callback":null,"end":672.661504,"start":107.405312},"id":"22f931bc-da2a-4ccb-b3bb-665b3910ac35","type":"Range1d"},{"attributes":{"dimensions":["width"],"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"}},"id":"40dbcb50-3651-42e6-8dba-b24a2547f8fb","type":"WheelZoomTool"},{"attributes":{"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}},"id":"1310395e-7669-468a-9cc6-f51bc5c3c378","type":"ResetTool"},{"attributes":{"axis_label":"Worker ID","axis_line_color":{"value":null},"formatter":{"id":"ad7d5930-1027-46a1-b7d5-307446287fd7","type":"CategoricalTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"},"ticker":{"id":"10d7adf1-ccb8-4fb0-a81c-73246bace5e0","type":"CategoricalTicker"}},"id":"7ea56366-c181-4b6a-ae75-dfa08a8d932c","type":"CategoricalAxis"},{"attributes":{"plot":null,"text":"Profile Results"},"id":"9dc47985-8e68-4b3c-9fea-2f464af1136a","type":"Title"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"c2bb4f30-1707-4010-b817-1f1e7ea29d8f","type":"Line"},{"attributes":{},"id":"d4ec53fe-51f5-4441-a9f2-abac01525ca8","type":"BasicTicker"},{"attributes":{},"id":"547cb4ef-5c4f-479e-a2e6-24632f30854e","type":"CategoricalTickFormatter"},{"attributes":{},"id":"c5caca52-1b4c-45e7-a6f0-d9fd35e15af4","type":"BasicTickFormatter"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[0.0,10.0,330.29999999999995,768.3000000000001,528.1,371.7,734.3,323.2,677.8,616.5,602.6999999999999,736.5,304.6,730.3000000000001,693.4000000000001,560.1]}},"id":"2783b34f-6d04-46e6-94f1-3e036183e7e4","type":"ColumnDataSource"},{"attributes":{"callback":null,"column_names":["function","color","width","key","y","x"],"data":{"color":["#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#ffffd9","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#081d58","#081d58","#7fcdbb","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#41b6c4","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#7fcdbb","#081d58","#c7e9b4","#c7e9b4","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#edf8b1","#1d91c0","#7fcdbb","#c7e9b4","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#7fcdbb","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#081d58","#7fcdbb","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#081d58","#225ea8","#1d91c0","#c7e9b4","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#41b6c4","#edf8b1","#1d91c0","#081d58","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#7fcdbb","#081d58","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#253494","#7fcdbb","#c7e9b4","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#7fcdbb","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#ffffd9","#c7e9b4","#7fcdbb"],"function":["_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","list(zip([*, *], [_finalize(...), _finalize(...)]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_finalize(concrete([_, _, _, ...]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_finalize(concrete([_, _, _, ...]))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","_partial_fit(*, _, _, [*, *], *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","merge_estimators([_, _, _, ...])","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","list(zip([*, *], [_finalize(...), _finalize(...)]))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))"],"key":["('fit-b66cedc053e99c6e95f363215e7a7334', 9)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 14)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 9)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 13)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 19)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 11)","('transform-91987e004b5eee33be4666084d289788', 1)","('fit-b66cedc053e99c6e95f363215e7a7334', 19)","pipeline-d96c68632b9021f27630c84c77037e1e","('transform-91987e004b5eee33be4666084d289788', 14)","('fit-b66cedc053e99c6e95f363215e7a7334', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 3)","('transform-3701820be5a01bea931ae6746fcf45de', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 8)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 13)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 1)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 14)","('transform-91987e004b5eee33be4666084d289788', 4)","('fit-b66cedc053e99c6e95f363215e7a7334', 16)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 17)","('transform-3701820be5a01bea931ae6746fcf45de', 3)","('fit-b66cedc053e99c6e95f363215e7a7334', 3)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 0)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 12)","('concat-663ec7c17b87051c17363e0138c027c9', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 19)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 11)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 1)","score-253ce92f4793fb8dc8462d77f26b25a1","('partial_fit-c38c22080c247611c3eef513f23c1800', 7)","('partial_fit-c38c22080c247611c3eef513f23c1800', 8)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 4)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 17)","('transform-91987e004b5eee33be4666084d289788', 7)","('fit-b66cedc053e99c6e95f363215e7a7334', 13)","('transform-91987e004b5eee33be4666084d289788', 0)","('transform-3701820be5a01bea931ae6746fcf45de', 6)","('fit-b66cedc053e99c6e95f363215e7a7334', 0)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 13)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 6)","('concat-663ec7c17b87051c17363e0138c027c9', 20)","('partial_fit-c38c22080c247611c3eef513f23c1800', 2)","('transform-3701820be5a01bea931ae6746fcf45de', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 20)","abda7a26585388f99acd646b1e447d0e","('transform-91987e004b5eee33be4666084d289788', 10)","('fit-b66cedc053e99c6e95f363215e7a7334', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 5)","('concat-663ec7c17b87051c17363e0138c027c9', 15)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 10)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 12)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 2)","('concat-663ec7c17b87051c17363e0138c027c9', 17)","('partial_fit-c38c22080c247611c3eef513f23c1800', 1)","90211eab9b932bd05043ea781b69898c","('partial_fit-c38c22080c247611c3eef513f23c1800', 18)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 10)","('transform-3701820be5a01bea931ae6746fcf45de', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 21)","('transform-91987e004b5eee33be4666084d289788', 13)","('fit-b66cedc053e99c6e95f363215e7a7334', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 8)","('transform-91987e004b5eee33be4666084d289788', 6)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 18)","('partial_fit-c38c22080c247611c3eef513f23c1800', 12)","('transform-91987e004b5eee33be4666084d289788', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 13)","('transform-3701820be5a01bea931ae6746fcf45de', 17)","('fit-b66cedc053e99c6e95f363215e7a7334', 17)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 2)","('fit-b66cedc053e99c6e95f363215e7a7334', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 1)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 10)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 2)","('transform-91987e004b5eee33be4666084d289788', 2)","('partial_fit-c38c22080c247611c3eef513f23c1800', 6)","('partial_fit-c38c22080c247611c3eef513f23c1800', 11)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 3)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 20)","('fit-b66cedc053e99c6e95f363215e7a7334', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 19)","('transform-3701820be5a01bea931ae6746fcf45de', 19)","('transform-91987e004b5eee33be4666084d289788', 19)","('fit-b66cedc053e99c6e95f363215e7a7334', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 0)","('concat-663ec7c17b87051c17363e0138c027c9', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 7)","('concat-663ec7c17b87051c17363e0138c027c9', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 5)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 18)","('transform-3701820be5a01bea931ae6746fcf45de', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 6)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 19)","('transform-91987e004b5eee33be4666084d289788', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 11)","('transform-3701820be5a01bea931ae6746fcf45de', 4)","('concat-663ec7c17b87051c17363e0138c027c9', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 4)","('partial_fit-c38c22080c247611c3eef513f23c1800', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 21)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 20)","('transform-91987e004b5eee33be4666084d289788', 12)","('fit-b66cedc053e99c6e95f363215e7a7334', 8)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 9)","('transform-91987e004b5eee33be4666084d289788', 3)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 14)","score-63ed8c68941f0b652aa11328af0b65dd","('concat-663ec7c17b87051c17363e0138c027c9', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 9)","('partial_fit-c38c22080c247611c3eef513f23c1800', 16)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 16)","('fit-b66cedc053e99c6e95f363215e7a7334', 18)","('transform-91987e004b5eee33be4666084d289788', 15)","('fit-b66cedc053e99c6e95f363215e7a7334', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 2)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 14)","('concat-663ec7c17b87051c17363e0138c027c9', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 21)","('transform-91987e004b5eee33be4666084d289788', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 3)","('partial_fit-c38c22080c247611c3eef513f23c1800', 10)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 2)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 15)","('transform-91987e004b5eee33be4666084d289788', 5)","('fit-b66cedc053e99c6e95f363215e7a7334', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 18)","('transform-91987e004b5eee33be4666084d289788', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 2)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 18)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 4)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 9)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 5)","fit-b66cedc053e99c6e95f363215e7a7334","('transform-3701820be5a01bea931ae6746fcf45de', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 18)","('transform-91987e004b5eee33be4666084d289788', 8)","('fit-b66cedc053e99c6e95f363215e7a7334', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 8)","('transform-91987e004b5eee33be4666084d289788', 21)","('concat-663ec7c17b87051c17363e0138c027c9', 13)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 12)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 2)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 0)","('transform-91987e004b5eee33be4666084d289788', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 5)","('partial_fit-c38c22080c247611c3eef513f23c1800', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 8)","pipeline-8a4823395f69e56e2cb8a1cce61614b1","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 21)","('transform-91987e004b5eee33be4666084d289788', 11)"],"width":[0.06586098670959473,0.6457560062408447,0.04258108139038086,0.04684591293334961,0.6643929481506348,0.0018749237060546875,0.004625797271728516,0.07071113586425781,0.025445938110351562,0.0028531551361083984,0.0242919921875,0.06588196754455566,0.2476968765258789,0.07451295852661133,0.2138688564300537,0.1300959587097168,0.0819091796875,0.5953431129455566,0.04957008361816406,0.12508916854858398,0.003350973129272461,0.003751993179321289,0.0924229621887207,0.029755115509033203,0.16345882415771484,0.04338383674621582,0.23795700073242188,0.08170008659362793,0.02003192901611328,0.059110164642333984,0.24330687522888184,0.5237650871276855,0.0024721622467041016,0.07349610328674316,0.07262206077575684,0.7556469440460205,0.005363941192626953,0.0124969482421875,0.23180007934570312,0.02680206298828125,0.02742314338684082,0.21030187606811523,0.12379288673400879,0.11370015144348145,0.06509518623352051,0.2521989345550537,0.06660294532775879,0.07633304595947266,0.7288670539855957,0.01615118980407715,0.003709077835083008,0.06541800498962402,0.8098061084747314,0.01604294776916504,0.06065511703491211,0.0601809024810791,0.08130097389221191,0.019283056259155273,0.1066892147064209,0.06401610374450684,0.04907107353210449,0.1592121124267578,0.10581588745117188,0.6555349826812744,0.0853719711303711,0.0902719497680664,0.6216058731079102,0.0019168853759765625,0.08568382263183594,0.08466506004333496,0.15590596199035645,0.05888509750366211,0.005702972412109375,0.033917903900146484,0.06485390663146973,0.05897188186645508,0.08901000022888184,0.0025861263275146484,0.09967684745788574,0.07784390449523926,0.7245190143585205,0.06766796112060547,0.1606597900390625,0.2092750072479248,0.012597799301147461,0.002218961715698242,0.2374742031097412,0.038105010986328125,0.09521698951721191,0.11808013916015625,0.029591083526611328,0.07445287704467773,0.1004478931427002,0.08746504783630371,0.002215862274169922,0.04172396659851074,0.09367799758911133,0.4731299877166748,0.0015881061553955078,0.07727622985839844,0.14694786071777344,0.7179610729217529,0.0021829605102539062,0.014772891998291016,0.13095903396606445,0.02698802947998047,0.02161383628845215,0.08034682273864746,0.059591054916381836,0.0374760627746582,0.07213306427001953,0.06326103210449219,0.05134010314941406,0.2137470245361328,0.20203399658203125,0.6923129558563232,0.0029180049896240234,0.0710291862487793,0.805718183517456,0.011174917221069336,0.06751608848571777,0.034657955169677734,0.003068208694458008,0.0549159049987793,0.16846513748168945,0.13571906089782715,0.23821115493774414,0.10757899284362793,0.07146906852722168,0.08735895156860352,0.5671989917755127,0.03183698654174805,0.0029900074005126953,0.06832599639892578,0.011420965194702148,0.05526995658874512,0.03244185447692871,0.08154010772705078,0.04314613342285156,0.0028870105743408203,0.21623516082763672,0.11446499824523926,0.7872660160064697,0.0415959358215332,0.125108003616333,0.17416095733642578,0.002110004425048828,0.0026481151580810547,0.03248000144958496,0.059504032135009766,0.035080909729003906,0.0026199817657470703,0.0018470287322998047,0.02415299415588379,0.08168506622314453,0.09329485893249512,0.07958602905273438,0.21392393112182617,0.09049797058105469,0.5561599731445312,0.0017309188842773438,0.035423994064331055,0.09253191947937012,0.4566020965576172,0.26935601234436035,0.003332853317260742,0.026254892349243164,0.10485410690307617,0.10407114028930664,0.14144110679626465,0.0792539119720459,0.0031042098999023438,0.23423194885253906,0.2550480365753174,0.600883960723877,0.002858877182006836,0.050050973892211914,0.1331310272216797,0.6163759231567383,0.01810002326965332,0.035672903060913086,0.06244087219238281,0.03072500228881836,0.054572105407714844,0.37024998664855957,0.03629589080810547,0.09598612785339355,0.1671440601348877,0.10978102684020996,0.7178628444671631,0.07458209991455078,0.04324197769165039,0.7996950149536133,0.01361989974975586,0.0019741058349609375,0.07398605346679688,0.28394317626953125,0.001970052719116211,0.07586097717285156,0.0031180381774902344,0.02670884132385254,0.07708907127380371,0.03445792198181152,0.052201032638549805,0.12042808532714844],"x":[4.090320348739624,1.648893117904663,3.4619815349578857,4.667968034744263,2.8307526111602783,4.537511587142944,5.077923059463501,5.653439521789551,4.923432111740112,6.925442457199097,6.64546799659729,3.574086904525757,0.999983549118042,6.298099517822266,7.45468544960022,4.756816148757935,2.5808045864105225,0.30690860748291016,4.148086071014404,3.357834577560425,3.6068685054779053,4.579475164413452,1.2186546325683594,4.895779609680176,0.558983564376831,4.4328391551971436,2.483785629272461,6.088378190994263,5.992499113082886,0.7091870307922363,0.9688894748687744,0.2618825435638428,2.157940149307251,4.670245885848999,2.3284060955047607,5.5493714809417725,3.611297130584717,0.6475095748901367,7.439609050750732,2.7145791053771973,3.591430425643921,2.0343730449676514,5.914428472518921,2.2025129795074463,4.61195969581604,0.9795176982879639,2.4651834964752197,1.1524765491485596,4.0719006061553955,0.6715214252471924,3.6089394092559814,0.843339204788208,5.147461175918579,2.1486446857452393,7.1381494998931885,1.2503764629364014,1.1317293643951416,5.986012697219849,2.2725794315338135,7.1079161167144775,7.236618757247925,3.509695053100586,3.642275094985962,1.684633493423462,2.2490460872650146,4.819885969161987,3.0263431072235107,4.5823915004730225,3.328597068786621,0.6052963733673096,6.207232236862183,1.1907966136932373,7.14648962020874,6.6163010597229,3.403926134109497,6.0320351123809814,7.315207242965698,6.928207159042358,4.5295164585113525,2.376138925552368,1.566617727279663,3.559080123901367,3.3301360607147217,2.435140371322632,5.085486173629761,4.535426378250122,5.8508899211883545,4.8614115715026855,7.216456651687622,0.583198070526123,6.5844855308532715,4.49699854850769,6.389211893081665,6.618567705154419,5.6169350147247314,0.674659013748169,2.6686511039733887,0.24029803276062012,2.2184131145477295,4.932769060134888,2.1260740756988525,6.716585397720337,3.4395556449890137,0.8517866134643555,0.7131874561309814,2.687230110168457,4.046197175979614,0.7358014583587646,5.582516431808472,7.1932830810546875,4.858009576797485,6.232504606246948,6.021356105804443,6.093942642211914,1.2249290943145752,4.064636468887329,0.6619160175323486,2.294928550720215,5.449322938919067,2.3315746784210205,6.8737571239471436,2.656337022781372,6.301667928695679,2.1787760257720947,2.0563535690307617,6.129469633102417,3.858684539794922,3.6646387577056885,2.4512417316436768,4.582173585891724,3.011631727218628,0.7946405410766602,3.24638295173645,0.6388039588928223,2.14557147026062,1.1332981586456299,7.307427167892456,3.204054117202759,7.004106044769287,7.142140626907349,4.734147548675537,3.6501834392547607,1.6589138507843018,3.504122018814087,3.6765801906585693,0.7601034641265869,4.458678960800171,4.456248998641968,7.756953954696655,5.957252025604248,5.09783148765564,7.141294240951538,3.2488505840301514,5.9703686237335205,4.536349534988403,6.31084942817688,6.343047142028809,4.972130060195923,2.386583089828491,0.2848329544067383,2.1600894927978516,4.724769830703735,3.3837549686431885,6.611196994781494,5.823562860488892,0.777700662612915,4.022213697433472,0.7915370464324951,5.023497581481934,2.2705767154693604,5.131868124008179,6.336971044540405,6.086857080459595,0.9867370128631592,4.473842144012451,2.4889466762542725,4.608405351638794,2.079023599624634,5.4236249923706055,0.6513330936431885,2.6211116313934326,6.229077577590942,3.9936695098876953,2.1882801055908203,7.54526686668396,6.931612014770508,6.252013921737671,3.494093179702759,4.991097688674927,2.8493664264678955,6.9448699951171875,4.458007097244263,4.095598459243774,1.197504997253418,3.4374470710754395,0.8163859844207764,6.427215576171875,2.2166011333465576,1.3184475898742676,5.614207983016968,7.277772665023804,3.2471554279327393,7.748010873794556,6.897837400436401,3.48088002204895],"y":[3,1,1,1,3,4,1,2,4,4,2,4,1,2,1,1,2,4,3,4,3,2,2,4,3,4,4,4,2,4,2,2,1,2,4,3,3,3,4,4,3,4,4,2,1,3,3,4,1,2,4,1,2,1,1,3,2,4,1,2,2,2,2,2,4,3,2,2,1,1,4,3,2,2,1,2,3,4,1,1,4,1,3,2,3,4,1,4,4,2,2,4,2,4,2,3,2,3,1,1,3,3,1,4,1,4,3,3,2,3,1,3,4,3,1,4,2,2,4,1,2,4,1,4,1,2,3,4,1,4,4,1,3,4,4,3,2,3,4,3,4,1,3,1,3,2,4,4,4,3,1,4,3,2,2,3,1,3,3,1,1,2,2,1,2,3,3,4,1,3,3,2,1,4,3,1,2,2,1,2,4,2,3,1,2,2,1,3,4,1,1,1,2,4,1,3,4,1,2,2,1,1,3,4,4]}},"id":"5fb3f10c-1764-49b9-b484-c6e720610a47","type":"ColumnDataSource"},{"attributes":{},"id":"f3e1fe51-1c05-421e-b9aa-5d5e419c904d","type":"BasicTickFormatter"},{"attributes":{"callback":null,"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"},"point_policy":"follow_mouse","tooltips":"\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Key:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@key&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Task:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@function&lt;/span&gt;\n    &lt;/div&gt;\n    "},"id":"fb8ef419-e82b-43ec-b58b-991438980a7c","type":"HoverTool"},{"attributes":{"axis_label":"Memory (MB)","formatter":{"id":"3ac60952-1bda-47aa-acd7-8e67fed286ca","type":"BasicTickFormatter"},"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"},"ticker":{"id":"db1c842c-f47b-4c32-90b4-c170224bf1f9","type":"BasicTicker"},"y_range_name":"memory"},"id":"8b1ef460-928f-459a-8664-58ab7d3b7f46","type":"LinearAxis"},{"attributes":{"children":[{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"}]},"id":"8d82e340-8e65-4362-a647-570c3a69ed58","type":"Row"},{"attributes":{},"id":"e46c336c-60e5-4550-929b-eb62d309213a","type":"BasicTickFormatter"},{"attributes":{"callback":null,"column_names":["function","color","width","key","y","x"],"data":{"color":["#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#ffffd9","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#081d58","#081d58","#7fcdbb","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#41b6c4","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#7fcdbb","#081d58","#c7e9b4","#c7e9b4","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#edf8b1","#1d91c0","#7fcdbb","#c7e9b4","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#7fcdbb","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#081d58","#7fcdbb","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#081d58","#225ea8","#1d91c0","#c7e9b4","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#41b6c4","#edf8b1","#1d91c0","#081d58","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#7fcdbb","#081d58","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#253494","#7fcdbb","#c7e9b4","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#7fcdbb","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#ffffd9","#c7e9b4","#7fcdbb"],"function":["_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","list(zip([*, *], [_finalize(...), _finalize(...)]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_finalize(concrete([_, _, _, ...]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_finalize(concrete([_, _, _, ...]))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","_partial_fit(*, _, _, [*, *], *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","merge_estimators([_, _, _, ...])","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","list(zip([*, *], [_finalize(...), _finalize(...)]))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))"],"key":["('fit-b66cedc053e99c6e95f363215e7a7334', 9)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 14)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 9)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 13)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 19)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 11)","('transform-91987e004b5eee33be4666084d289788', 1)","('fit-b66cedc053e99c6e95f363215e7a7334', 19)","pipeline-d96c68632b9021f27630c84c77037e1e","('transform-91987e004b5eee33be4666084d289788', 14)","('fit-b66cedc053e99c6e95f363215e7a7334', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 3)","('transform-3701820be5a01bea931ae6746fcf45de', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 8)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 13)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 1)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 14)","('transform-91987e004b5eee33be4666084d289788', 4)","('fit-b66cedc053e99c6e95f363215e7a7334', 16)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 17)","('transform-3701820be5a01bea931ae6746fcf45de', 3)","('fit-b66cedc053e99c6e95f363215e7a7334', 3)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 0)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 12)","('concat-663ec7c17b87051c17363e0138c027c9', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 19)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 11)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 1)","score-253ce92f4793fb8dc8462d77f26b25a1","('partial_fit-c38c22080c247611c3eef513f23c1800', 7)","('partial_fit-c38c22080c247611c3eef513f23c1800', 8)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 4)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 17)","('transform-91987e004b5eee33be4666084d289788', 7)","('fit-b66cedc053e99c6e95f363215e7a7334', 13)","('transform-91987e004b5eee33be4666084d289788', 0)","('transform-3701820be5a01bea931ae6746fcf45de', 6)","('fit-b66cedc053e99c6e95f363215e7a7334', 0)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 13)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 6)","('concat-663ec7c17b87051c17363e0138c027c9', 20)","('partial_fit-c38c22080c247611c3eef513f23c1800', 2)","('transform-3701820be5a01bea931ae6746fcf45de', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 20)","abda7a26585388f99acd646b1e447d0e","('transform-91987e004b5eee33be4666084d289788', 10)","('fit-b66cedc053e99c6e95f363215e7a7334', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 5)","('concat-663ec7c17b87051c17363e0138c027c9', 15)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 10)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 12)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 2)","('concat-663ec7c17b87051c17363e0138c027c9', 17)","('partial_fit-c38c22080c247611c3eef513f23c1800', 1)","90211eab9b932bd05043ea781b69898c","('partial_fit-c38c22080c247611c3eef513f23c1800', 18)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 10)","('transform-3701820be5a01bea931ae6746fcf45de', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 21)","('transform-91987e004b5eee33be4666084d289788', 13)","('fit-b66cedc053e99c6e95f363215e7a7334', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 8)","('transform-91987e004b5eee33be4666084d289788', 6)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 18)","('partial_fit-c38c22080c247611c3eef513f23c1800', 12)","('transform-91987e004b5eee33be4666084d289788', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 13)","('transform-3701820be5a01bea931ae6746fcf45de', 17)","('fit-b66cedc053e99c6e95f363215e7a7334', 17)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 2)","('fit-b66cedc053e99c6e95f363215e7a7334', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 1)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 10)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 2)","('transform-91987e004b5eee33be4666084d289788', 2)","('partial_fit-c38c22080c247611c3eef513f23c1800', 6)","('partial_fit-c38c22080c247611c3eef513f23c1800', 11)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 3)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 20)","('fit-b66cedc053e99c6e95f363215e7a7334', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 19)","('transform-3701820be5a01bea931ae6746fcf45de', 19)","('transform-91987e004b5eee33be4666084d289788', 19)","('fit-b66cedc053e99c6e95f363215e7a7334', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 0)","('concat-663ec7c17b87051c17363e0138c027c9', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 7)","('concat-663ec7c17b87051c17363e0138c027c9', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 5)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 18)","('transform-3701820be5a01bea931ae6746fcf45de', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 6)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 19)","('transform-91987e004b5eee33be4666084d289788', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 11)","('transform-3701820be5a01bea931ae6746fcf45de', 4)","('concat-663ec7c17b87051c17363e0138c027c9', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 4)","('partial_fit-c38c22080c247611c3eef513f23c1800', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 21)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 20)","('transform-91987e004b5eee33be4666084d289788', 12)","('fit-b66cedc053e99c6e95f363215e7a7334', 8)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 9)","('transform-91987e004b5eee33be4666084d289788', 3)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 14)","score-63ed8c68941f0b652aa11328af0b65dd","('concat-663ec7c17b87051c17363e0138c027c9', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 9)","('partial_fit-c38c22080c247611c3eef513f23c1800', 16)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 16)","('fit-b66cedc053e99c6e95f363215e7a7334', 18)","('transform-91987e004b5eee33be4666084d289788', 15)","('fit-b66cedc053e99c6e95f363215e7a7334', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 2)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 14)","('concat-663ec7c17b87051c17363e0138c027c9', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 21)","('transform-91987e004b5eee33be4666084d289788', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 3)","('partial_fit-c38c22080c247611c3eef513f23c1800', 10)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 2)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 15)","('transform-91987e004b5eee33be4666084d289788', 5)","('fit-b66cedc053e99c6e95f363215e7a7334', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 18)","('transform-91987e004b5eee33be4666084d289788', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 2)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 18)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 4)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 9)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 5)","fit-b66cedc053e99c6e95f363215e7a7334","('transform-3701820be5a01bea931ae6746fcf45de', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 18)","('transform-91987e004b5eee33be4666084d289788', 8)","('fit-b66cedc053e99c6e95f363215e7a7334', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 8)","('transform-91987e004b5eee33be4666084d289788', 21)","('concat-663ec7c17b87051c17363e0138c027c9', 13)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 12)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 2)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 0)","('transform-91987e004b5eee33be4666084d289788', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 5)","('partial_fit-c38c22080c247611c3eef513f23c1800', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 8)","pipeline-8a4823395f69e56e2cb8a1cce61614b1","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 21)","('transform-91987e004b5eee33be4666084d289788', 11)"],"width":[0.06586098670959473,0.6457560062408447,0.04258108139038086,0.04684591293334961,0.6643929481506348,0.0018749237060546875,0.004625797271728516,0.07071113586425781,0.025445938110351562,0.0028531551361083984,0.0242919921875,0.06588196754455566,0.2476968765258789,0.07451295852661133,0.2138688564300537,0.1300959587097168,0.0819091796875,0.5953431129455566,0.04957008361816406,0.12508916854858398,0.003350973129272461,0.003751993179321289,0.0924229621887207,0.029755115509033203,0.16345882415771484,0.04338383674621582,0.23795700073242188,0.08170008659362793,0.02003192901611328,0.059110164642333984,0.24330687522888184,0.5237650871276855,0.0024721622467041016,0.07349610328674316,0.07262206077575684,0.7556469440460205,0.005363941192626953,0.0124969482421875,0.23180007934570312,0.02680206298828125,0.02742314338684082,0.21030187606811523,0.12379288673400879,0.11370015144348145,0.06509518623352051,0.2521989345550537,0.06660294532775879,0.07633304595947266,0.7288670539855957,0.01615118980407715,0.003709077835083008,0.06541800498962402,0.8098061084747314,0.01604294776916504,0.06065511703491211,0.0601809024810791,0.08130097389221191,0.019283056259155273,0.1066892147064209,0.06401610374450684,0.04907107353210449,0.1592121124267578,0.10581588745117188,0.6555349826812744,0.0853719711303711,0.0902719497680664,0.6216058731079102,0.0019168853759765625,0.08568382263183594,0.08466506004333496,0.15590596199035645,0.05888509750366211,0.005702972412109375,0.033917903900146484,0.06485390663146973,0.05897188186645508,0.08901000022888184,0.0025861263275146484,0.09967684745788574,0.07784390449523926,0.7245190143585205,0.06766796112060547,0.1606597900390625,0.2092750072479248,0.012597799301147461,0.002218961715698242,0.2374742031097412,0.038105010986328125,0.09521698951721191,0.11808013916015625,0.029591083526611328,0.07445287704467773,0.1004478931427002,0.08746504783630371,0.002215862274169922,0.04172396659851074,0.09367799758911133,0.4731299877166748,0.0015881061553955078,0.07727622985839844,0.14694786071777344,0.7179610729217529,0.0021829605102539062,0.014772891998291016,0.13095903396606445,0.02698802947998047,0.02161383628845215,0.08034682273864746,0.059591054916381836,0.0374760627746582,0.07213306427001953,0.06326103210449219,0.05134010314941406,0.2137470245361328,0.20203399658203125,0.6923129558563232,0.0029180049896240234,0.0710291862487793,0.805718183517456,0.011174917221069336,0.06751608848571777,0.034657955169677734,0.003068208694458008,0.0549159049987793,0.16846513748168945,0.13571906089782715,0.23821115493774414,0.10757899284362793,0.07146906852722168,0.08735895156860352,0.5671989917755127,0.03183698654174805,0.0029900074005126953,0.06832599639892578,0.011420965194702148,0.05526995658874512,0.03244185447692871,0.08154010772705078,0.04314613342285156,0.0028870105743408203,0.21623516082763672,0.11446499824523926,0.7872660160064697,0.0415959358215332,0.125108003616333,0.17416095733642578,0.002110004425048828,0.0026481151580810547,0.03248000144958496,0.059504032135009766,0.035080909729003906,0.0026199817657470703,0.0018470287322998047,0.02415299415588379,0.08168506622314453,0.09329485893249512,0.07958602905273438,0.21392393112182617,0.09049797058105469,0.5561599731445312,0.0017309188842773438,0.035423994064331055,0.09253191947937012,0.4566020965576172,0.26935601234436035,0.003332853317260742,0.026254892349243164,0.10485410690307617,0.10407114028930664,0.14144110679626465,0.0792539119720459,0.0031042098999023438,0.23423194885253906,0.2550480365753174,0.600883960723877,0.002858877182006836,0.050050973892211914,0.1331310272216797,0.6163759231567383,0.01810002326965332,0.035672903060913086,0.06244087219238281,0.03072500228881836,0.054572105407714844,0.37024998664855957,0.03629589080810547,0.09598612785339355,0.1671440601348877,0.10978102684020996,0.7178628444671631,0.07458209991455078,0.04324197769165039,0.7996950149536133,0.01361989974975586,0.0019741058349609375,0.07398605346679688,0.28394317626953125,0.001970052719116211,0.07586097717285156,0.0031180381774902344,0.02670884132385254,0.07708907127380371,0.03445792198181152,0.052201032638549805,0.12042808532714844],"x":[4.090320348739624,1.648893117904663,3.4619815349578857,4.667968034744263,2.8307526111602783,4.537511587142944,5.077923059463501,5.653439521789551,4.923432111740112,6.925442457199097,6.64546799659729,3.574086904525757,0.999983549118042,6.298099517822266,7.45468544960022,4.756816148757935,2.5808045864105225,0.30690860748291016,4.148086071014404,3.357834577560425,3.6068685054779053,4.579475164413452,1.2186546325683594,4.895779609680176,0.558983564376831,4.4328391551971436,2.483785629272461,6.088378190994263,5.992499113082886,0.7091870307922363,0.9688894748687744,0.2618825435638428,2.157940149307251,4.670245885848999,2.3284060955047607,5.5493714809417725,3.611297130584717,0.6475095748901367,7.439609050750732,2.7145791053771973,3.591430425643921,2.0343730449676514,5.914428472518921,2.2025129795074463,4.61195969581604,0.9795176982879639,2.4651834964752197,1.1524765491485596,4.0719006061553955,0.6715214252471924,3.6089394092559814,0.843339204788208,5.147461175918579,2.1486446857452393,7.1381494998931885,1.2503764629364014,1.1317293643951416,5.986012697219849,2.2725794315338135,7.1079161167144775,7.236618757247925,3.509695053100586,3.642275094985962,1.684633493423462,2.2490460872650146,4.819885969161987,3.0263431072235107,4.5823915004730225,3.328597068786621,0.6052963733673096,6.207232236862183,1.1907966136932373,7.14648962020874,6.6163010597229,3.403926134109497,6.0320351123809814,7.315207242965698,6.928207159042358,4.5295164585113525,2.376138925552368,1.566617727279663,3.559080123901367,3.3301360607147217,2.435140371322632,5.085486173629761,4.535426378250122,5.8508899211883545,4.8614115715026855,7.216456651687622,0.583198070526123,6.5844855308532715,4.49699854850769,6.389211893081665,6.618567705154419,5.6169350147247314,0.674659013748169,2.6686511039733887,0.24029803276062012,2.2184131145477295,4.932769060134888,2.1260740756988525,6.716585397720337,3.4395556449890137,0.8517866134643555,0.7131874561309814,2.687230110168457,4.046197175979614,0.7358014583587646,5.582516431808472,7.1932830810546875,4.858009576797485,6.232504606246948,6.021356105804443,6.093942642211914,1.2249290943145752,4.064636468887329,0.6619160175323486,2.294928550720215,5.449322938919067,2.3315746784210205,6.8737571239471436,2.656337022781372,6.301667928695679,2.1787760257720947,2.0563535690307617,6.129469633102417,3.858684539794922,3.6646387577056885,2.4512417316436768,4.582173585891724,3.011631727218628,0.7946405410766602,3.24638295173645,0.6388039588928223,2.14557147026062,1.1332981586456299,7.307427167892456,3.204054117202759,7.004106044769287,7.142140626907349,4.734147548675537,3.6501834392547607,1.6589138507843018,3.504122018814087,3.6765801906585693,0.7601034641265869,4.458678960800171,4.456248998641968,7.756953954696655,5.957252025604248,5.09783148765564,7.141294240951538,3.2488505840301514,5.9703686237335205,4.536349534988403,6.31084942817688,6.343047142028809,4.972130060195923,2.386583089828491,0.2848329544067383,2.1600894927978516,4.724769830703735,3.3837549686431885,6.611196994781494,5.823562860488892,0.777700662612915,4.022213697433472,0.7915370464324951,5.023497581481934,2.2705767154693604,5.131868124008179,6.336971044540405,6.086857080459595,0.9867370128631592,4.473842144012451,2.4889466762542725,4.608405351638794,2.079023599624634,5.4236249923706055,0.6513330936431885,2.6211116313934326,6.229077577590942,3.9936695098876953,2.1882801055908203,7.54526686668396,6.931612014770508,6.252013921737671,3.494093179702759,4.991097688674927,2.8493664264678955,6.9448699951171875,4.458007097244263,4.095598459243774,1.197504997253418,3.4374470710754395,0.8163859844207764,6.427215576171875,2.2166011333465576,1.3184475898742676,5.614207983016968,7.277772665023804,3.2471554279327393,7.748010873794556,6.897837400436401,3.48088002204895],"y":[3,1,1,1,3,4,1,2,4,4,2,4,1,2,1,1,2,4,3,4,3,2,2,4,3,4,4,4,2,4,2,2,1,2,4,3,3,3,4,4,3,4,4,2,1,3,3,4,1,2,4,1,2,1,1,3,2,4,1,2,2,2,2,2,4,3,2,2,1,1,4,3,2,2,1,2,3,4,1,1,4,1,3,2,3,4,1,4,4,2,2,4,2,4,2,3,2,3,1,1,3,3,1,4,1,4,3,3,2,3,1,3,4,3,1,4,2,2,4,1,2,4,1,4,1,2,3,4,1,4,4,1,3,4,4,3,2,3,4,3,4,1,3,1,3,2,4,4,4,3,1,4,3,2,2,3,1,3,3,1,1,2,2,1,2,3,3,4,1,3,3,2,1,4,3,1,2,2,1,2,4,2,3,1,2,2,1,3,4,1,1,1,2,4,1,3,4,1,2,2,1,1,3,4,4]}},"id":"28846f5d-81cb-413d-9a52-bec2374c4154","type":"ColumnDataSource"},{"attributes":{"plot":null,"text":"Profile Results"},"id":"1efb7fe1-9818-4fe8-b1c9-98b73f6fa5db","type":"Title"},{"attributes":{"line_color":{"value":"#41b6c4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"d358fedf-f4f3-4588-acd4-9fe8cb11b09d","type":"Line"},{"attributes":{"dimension":1,"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"},"ticker":{"id":"94998d1c-c416-40d6-8527-52fa5fcdf861","type":"BasicTicker"}},"id":"9668db77-4188-411f-9fd0-de2b3665ccd1","type":"Grid"},{"attributes":{},"id":"78c33050-ab06-43cf-ba20-f0d90fb053e9","type":"BasicTickFormatter"},{"attributes":{"dimensions":["width"],"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}},"id":"b1a6eef8-8e90-41d2-aa0c-a2f14d3834da","type":"PanTool"},{"attributes":{"dimension":1,"grid_line_color":{"value":null},"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"},"ticker":{"id":"f38d1496-6647-41ef-8d08-625d87f3fb87","type":"CategoricalTicker"}},"id":"cf46d440-c8cb-4434-8669-b1bc92932632","type":"Grid"},{"attributes":{"dimension":1,"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"},"ticker":{"id":"8f7eceea-1a91-46c4-86a1-9bd3a966f1ec","type":"BasicTicker"}},"id":"df7125c8-ab3e-415f-8ecf-5d79f0fab3cc","type":"Grid"},{"attributes":{"dimension":1,"grid_line_color":{"value":null},"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"},"ticker":{"id":"0122f427-3500-4986-bf0e-0d8627ec2b89","type":"CategoricalTicker"}},"id":"a392290d-36f0-4d4b-9099-01d82ff17052","type":"Grid"},{"attributes":{"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"}},"id":"b277f30f-4d13-46b6-b357-06c9248a7cb3","type":"SaveTool"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"f4c303f3-6e23-4b1d-9169-f5f6c4dd3c32","type":"Line"},{"attributes":{},"id":"25db293e-6510-4937-aba7-d7ccb00022cd","type":"BasicTickFormatter"},{"attributes":{"below":[{"id":"7a558955-1fc6-4af0-add8-59310814b89e","type":"LinearAxis"}],"extra_y_ranges":{"memory":{"id":"45f0625a-d0bc-45d2-8bc5-0a47dc3335f3","type":"Range1d"}},"left":[{"id":"5c6e2b8d-0f49-4dac-bab4-67d0da61d247","type":"LinearAxis"}],"min_border_left":75,"min_border_right":75,"min_border_top":20,"plot_height":270,"plot_width":800,"renderers":[{"id":"7a558955-1fc6-4af0-add8-59310814b89e","type":"LinearAxis"},{"id":"fd38cdd1-7c86-4a47-9db6-8e987134ef25","type":"Grid"},{"id":"5c6e2b8d-0f49-4dac-bab4-67d0da61d247","type":"LinearAxis"},{"id":"9668db77-4188-411f-9fd0-de2b3665ccd1","type":"Grid"},{"id":"e5d1f089-426c-4cda-aab5-02de95b9fbbc","type":"Legend"},{"id":"a5200809-0df0-44b0-a375-5bcbf8602156","type":"GlyphRenderer"},{"id":"1bb98724-8075-4449-a3a0-0680b1b52dc7","type":"GlyphRenderer"},{"id":"85ee14a6-6375-4a03-83cb-5da9d2deb856","type":"LinearAxis"}],"right":[{"id":"85ee14a6-6375-4a03-83cb-5da9d2deb856","type":"LinearAxis"}],"title":null,"tool_events":{"id":"42bd6979-489b-4a1d-903d-09d4993022d5","type":"ToolEvents"},"toolbar":{"id":"7b815b60-9cb6-4de4-8758-4ad8d38d5c90","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"ce94472a-73c1-4d1f-9b41-7cd6f641b4f2","type":"Range1d"},"y_range":{"id":"11934803-7e38-4937-9783-50fbb0916c6b","type":"Range1d"}},"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"d8949899-328f-4991-ad81-2b5c690ed5dd","type":"BasicTicker"},{"attributes":{},"id":"209af650-221e-4300-b7fe-9071c41333b6","type":"BasicTicker"},{"attributes":{"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}},"id":"042d1673-b822-4411-b979-386ab439b9eb","type":"SaveTool"},{"attributes":{"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"},"ticker":{"id":"d8949899-328f-4991-ad81-2b5c690ed5dd","type":"BasicTicker"}},"id":"5ad28cac-4bfa-4d51-9788-a941efe38c0c","type":"Grid"},{"attributes":{"line_color":{"value":"#253494"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"446184f5-46a2-4e6f-a8c2-f2667a8f9ce9","type":"Line"},{"attributes":{},"id":"e5d38b72-65f8-4c5f-9301-2d61f858701f","type":"BasicTickFormatter"},{"attributes":{"data_source":{"id":"28846f5d-81cb-413d-9a52-bec2374c4154","type":"ColumnDataSource"},"glyph":{"id":"1e295287-e53d-45ec-b47f-76e8d45a0dbe","type":"Rect"},"hover_glyph":null,"nonselection_glyph":{"id":"2a097976-767a-4ac2-bcd5-bf4114fad404","type":"Rect"},"selection_glyph":null},"id":"b64a9f55-5528-4852-b3aa-4c815dd542bd","type":"GlyphRenderer"},{"attributes":{"callback":null,"end":768.3000000000001},"id":"eceaedea-8558-4bd8-a284-e501c2c1f53f","type":"Range1d"},{"attributes":{},"id":"0122f427-3500-4986-bf0e-0d8627ec2b89","type":"CategoricalTicker"},{"attributes":{"dimension":1,"grid_line_color":{"value":null},"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"},"ticker":{"id":"7a97d14d-4e29-4e39-8fea-73c2bc27a141","type":"CategoricalTicker"}},"id":"a4e84e99-011e-4a36-a85c-0a6dc5e52a38","type":"Grid"},{"attributes":{"axis_label":"Time (s)","formatter":{"id":"3145f072-2fa9-4818-9ad1-771a81a71dae","type":"BasicTickFormatter"},"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"},"ticker":{"id":"d8949899-328f-4991-ad81-2b5c690ed5dd","type":"BasicTicker"}},"id":"d5d5bf65-24c8-450f-aa8f-2e231f3066fe","type":"LinearAxis"},{"attributes":{"callback":null,"end":7.773194074630737},"id":"b6abbdb1-6de8-443e-ab9c-0ef20040dd5e","type":"Range1d"},{"attributes":{"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}},"id":"8dd2e5ee-b298-40bb-9c66-3a54bce317ab","type":"SaveTool"},{"attributes":{},"id":"ad7d5930-1027-46a1-b7d5-307446287fd7","type":"CategoricalTickFormatter"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"5dda5c95-83d3-44c4-a2d4-218273ee0147","type":"Line"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"60c6cf9d-aad6-4c97-8081-2209f3de2adb","type":"HoverTool"},{"id":"4efc83c9-2dce-4555-a359-c255fe652517","type":"SaveTool"},{"id":"ff25866a-4820-4956-9fcc-a2e60b204a8a","type":"ResetTool"},{"id":"ec5c57b2-4e32-4c11-aa6c-9a589ec243ec","type":"ResizeTool"},{"id":"40dbcb50-3651-42e6-8dba-b24a2547f8fb","type":"WheelZoomTool"},{"id":"5598a0db-fc08-4975-8b8f-03ea29f2d2c0","type":"PanTool"}]},"id":"756ee7ba-a675-4815-b8cc-4c0b52f3dae4","type":"Toolbar"},{"attributes":{},"id":"e68b45a6-526a-4fdb-a14b-48a237142ce0","type":"BasicTicker"},{"attributes":{"axis_label":null,"axis_line_color":{"value":null},"formatter":{"id":"de55cc9c-9f3a-404e-904b-2802f56d2011","type":"BasicTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"},"ticker":{"id":"05f6a2b9-79e9-4d30-89da-90d393dfd373","type":"BasicTicker"}},"id":"4b4d55d0-2a83-4918-9e0f-fdd0829656f4","type":"LinearAxis"},{"attributes":{"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"},"ticker":{"id":"666ff0fc-c7f6-46c3-a877-2808aee6a919","type":"BasicTicker"}},"id":"fd38cdd1-7c86-4a47-9db6-8e987134ef25","type":"Grid"},{"attributes":{"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}},"id":"b0065189-b477-4fd9-98aa-cc425f4f2cc5","type":"ResetTool"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[0.0,10.0,330.29999999999995,768.3000000000001,528.1,371.7,734.3,323.2,677.8,616.5,602.6999999999999,736.5,304.6,730.3000000000001,693.4000000000001,560.1]}},"id":"be44546b-c6c8-4dfe-af38-d3c473ee12f8","type":"ColumnDataSource"},{"attributes":{"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}},"id":"0313b309-7a10-4656-952b-1805c0f57e7d","type":"ResetTool"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"042d1673-b822-4411-b979-386ab439b9eb","type":"SaveTool"},{"id":"0313b309-7a10-4656-952b-1805c0f57e7d","type":"ResetTool"},{"id":"6368e9c1-8a8d-4ec8-aa25-9c626e36c863","type":"ResizeTool"},{"id":"9fd31509-5922-44dd-9225-7cd9858cd4bf","type":"WheelZoomTool"},{"id":"01607153-0230-4ac3-9f8c-d1a4cd757dc1","type":"PanTool"}]},"id":"62861c3d-c083-4523-a705-8b6a390521f3","type":"Toolbar"},{"attributes":{},"id":"05f6a2b9-79e9-4d30-89da-90d393dfd373","type":"BasicTicker"},{"attributes":{"callback":null,"column_names":["function","color","width","key","y","x"],"data":{"color":["#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#ffffd9","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#081d58","#081d58","#7fcdbb","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#41b6c4","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#7fcdbb","#081d58","#c7e9b4","#c7e9b4","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#edf8b1","#1d91c0","#7fcdbb","#c7e9b4","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#7fcdbb","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#081d58","#7fcdbb","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#081d58","#225ea8","#1d91c0","#c7e9b4","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#41b6c4","#edf8b1","#1d91c0","#081d58","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#7fcdbb","#081d58","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#253494","#7fcdbb","#c7e9b4","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#7fcdbb","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#ffffd9","#c7e9b4","#7fcdbb"],"function":["_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","list(zip([*, *], [_finalize(...), _finalize(...)]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_finalize(concrete([_, _, _, ...]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_finalize(concrete([_, _, _, ...]))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","_partial_fit(*, _, _, [*, *], *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","merge_estimators([_, _, _, ...])","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","list(zip([*, *], [_finalize(...), _finalize(...)]))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))"],"key":["('fit-b66cedc053e99c6e95f363215e7a7334', 9)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 14)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 9)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 13)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 19)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 11)","('transform-91987e004b5eee33be4666084d289788', 1)","('fit-b66cedc053e99c6e95f363215e7a7334', 19)","pipeline-d96c68632b9021f27630c84c77037e1e","('transform-91987e004b5eee33be4666084d289788', 14)","('fit-b66cedc053e99c6e95f363215e7a7334', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 3)","('transform-3701820be5a01bea931ae6746fcf45de', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 8)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 13)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 1)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 14)","('transform-91987e004b5eee33be4666084d289788', 4)","('fit-b66cedc053e99c6e95f363215e7a7334', 16)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 17)","('transform-3701820be5a01bea931ae6746fcf45de', 3)","('fit-b66cedc053e99c6e95f363215e7a7334', 3)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 0)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 12)","('concat-663ec7c17b87051c17363e0138c027c9', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 19)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 11)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 1)","score-253ce92f4793fb8dc8462d77f26b25a1","('partial_fit-c38c22080c247611c3eef513f23c1800', 7)","('partial_fit-c38c22080c247611c3eef513f23c1800', 8)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 4)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 17)","('transform-91987e004b5eee33be4666084d289788', 7)","('fit-b66cedc053e99c6e95f363215e7a7334', 13)","('transform-91987e004b5eee33be4666084d289788', 0)","('transform-3701820be5a01bea931ae6746fcf45de', 6)","('fit-b66cedc053e99c6e95f363215e7a7334', 0)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 13)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 6)","('concat-663ec7c17b87051c17363e0138c027c9', 20)","('partial_fit-c38c22080c247611c3eef513f23c1800', 2)","('transform-3701820be5a01bea931ae6746fcf45de', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 20)","abda7a26585388f99acd646b1e447d0e","('transform-91987e004b5eee33be4666084d289788', 10)","('fit-b66cedc053e99c6e95f363215e7a7334', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 5)","('concat-663ec7c17b87051c17363e0138c027c9', 15)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 10)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 12)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 2)","('concat-663ec7c17b87051c17363e0138c027c9', 17)","('partial_fit-c38c22080c247611c3eef513f23c1800', 1)","90211eab9b932bd05043ea781b69898c","('partial_fit-c38c22080c247611c3eef513f23c1800', 18)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 10)","('transform-3701820be5a01bea931ae6746fcf45de', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 21)","('transform-91987e004b5eee33be4666084d289788', 13)","('fit-b66cedc053e99c6e95f363215e7a7334', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 8)","('transform-91987e004b5eee33be4666084d289788', 6)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 18)","('partial_fit-c38c22080c247611c3eef513f23c1800', 12)","('transform-91987e004b5eee33be4666084d289788', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 13)","('transform-3701820be5a01bea931ae6746fcf45de', 17)","('fit-b66cedc053e99c6e95f363215e7a7334', 17)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 2)","('fit-b66cedc053e99c6e95f363215e7a7334', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 1)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 10)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 2)","('transform-91987e004b5eee33be4666084d289788', 2)","('partial_fit-c38c22080c247611c3eef513f23c1800', 6)","('partial_fit-c38c22080c247611c3eef513f23c1800', 11)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 3)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 20)","('fit-b66cedc053e99c6e95f363215e7a7334', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 19)","('transform-3701820be5a01bea931ae6746fcf45de', 19)","('transform-91987e004b5eee33be4666084d289788', 19)","('fit-b66cedc053e99c6e95f363215e7a7334', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 0)","('concat-663ec7c17b87051c17363e0138c027c9', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 7)","('concat-663ec7c17b87051c17363e0138c027c9', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 5)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 18)","('transform-3701820be5a01bea931ae6746fcf45de', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 6)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 19)","('transform-91987e004b5eee33be4666084d289788', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 11)","('transform-3701820be5a01bea931ae6746fcf45de', 4)","('concat-663ec7c17b87051c17363e0138c027c9', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 4)","('partial_fit-c38c22080c247611c3eef513f23c1800', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 21)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 20)","('transform-91987e004b5eee33be4666084d289788', 12)","('fit-b66cedc053e99c6e95f363215e7a7334', 8)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 9)","('transform-91987e004b5eee33be4666084d289788', 3)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 14)","score-63ed8c68941f0b652aa11328af0b65dd","('concat-663ec7c17b87051c17363e0138c027c9', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 9)","('partial_fit-c38c22080c247611c3eef513f23c1800', 16)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 16)","('fit-b66cedc053e99c6e95f363215e7a7334', 18)","('transform-91987e004b5eee33be4666084d289788', 15)","('fit-b66cedc053e99c6e95f363215e7a7334', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 2)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 14)","('concat-663ec7c17b87051c17363e0138c027c9', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 21)","('transform-91987e004b5eee33be4666084d289788', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 3)","('partial_fit-c38c22080c247611c3eef513f23c1800', 10)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 2)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 15)","('transform-91987e004b5eee33be4666084d289788', 5)","('fit-b66cedc053e99c6e95f363215e7a7334', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 18)","('transform-91987e004b5eee33be4666084d289788', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 2)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 18)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 4)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 9)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 5)","fit-b66cedc053e99c6e95f363215e7a7334","('transform-3701820be5a01bea931ae6746fcf45de', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 18)","('transform-91987e004b5eee33be4666084d289788', 8)","('fit-b66cedc053e99c6e95f363215e7a7334', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 8)","('transform-91987e004b5eee33be4666084d289788', 21)","('concat-663ec7c17b87051c17363e0138c027c9', 13)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 12)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 2)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 0)","('transform-91987e004b5eee33be4666084d289788', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 5)","('partial_fit-c38c22080c247611c3eef513f23c1800', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 8)","pipeline-8a4823395f69e56e2cb8a1cce61614b1","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 21)","('transform-91987e004b5eee33be4666084d289788', 11)"],"width":[0.06586098670959473,0.6457560062408447,0.04258108139038086,0.04684591293334961,0.6643929481506348,0.0018749237060546875,0.004625797271728516,0.07071113586425781,0.025445938110351562,0.0028531551361083984,0.0242919921875,0.06588196754455566,0.2476968765258789,0.07451295852661133,0.2138688564300537,0.1300959587097168,0.0819091796875,0.5953431129455566,0.04957008361816406,0.12508916854858398,0.003350973129272461,0.003751993179321289,0.0924229621887207,0.029755115509033203,0.16345882415771484,0.04338383674621582,0.23795700073242188,0.08170008659362793,0.02003192901611328,0.059110164642333984,0.24330687522888184,0.5237650871276855,0.0024721622467041016,0.07349610328674316,0.07262206077575684,0.7556469440460205,0.005363941192626953,0.0124969482421875,0.23180007934570312,0.02680206298828125,0.02742314338684082,0.21030187606811523,0.12379288673400879,0.11370015144348145,0.06509518623352051,0.2521989345550537,0.06660294532775879,0.07633304595947266,0.7288670539855957,0.01615118980407715,0.003709077835083008,0.06541800498962402,0.8098061084747314,0.01604294776916504,0.06065511703491211,0.0601809024810791,0.08130097389221191,0.019283056259155273,0.1066892147064209,0.06401610374450684,0.04907107353210449,0.1592121124267578,0.10581588745117188,0.6555349826812744,0.0853719711303711,0.0902719497680664,0.6216058731079102,0.0019168853759765625,0.08568382263183594,0.08466506004333496,0.15590596199035645,0.05888509750366211,0.005702972412109375,0.033917903900146484,0.06485390663146973,0.05897188186645508,0.08901000022888184,0.0025861263275146484,0.09967684745788574,0.07784390449523926,0.7245190143585205,0.06766796112060547,0.1606597900390625,0.2092750072479248,0.012597799301147461,0.002218961715698242,0.2374742031097412,0.038105010986328125,0.09521698951721191,0.11808013916015625,0.029591083526611328,0.07445287704467773,0.1004478931427002,0.08746504783630371,0.002215862274169922,0.04172396659851074,0.09367799758911133,0.4731299877166748,0.0015881061553955078,0.07727622985839844,0.14694786071777344,0.7179610729217529,0.0021829605102539062,0.014772891998291016,0.13095903396606445,0.02698802947998047,0.02161383628845215,0.08034682273864746,0.059591054916381836,0.0374760627746582,0.07213306427001953,0.06326103210449219,0.05134010314941406,0.2137470245361328,0.20203399658203125,0.6923129558563232,0.0029180049896240234,0.0710291862487793,0.805718183517456,0.011174917221069336,0.06751608848571777,0.034657955169677734,0.003068208694458008,0.0549159049987793,0.16846513748168945,0.13571906089782715,0.23821115493774414,0.10757899284362793,0.07146906852722168,0.08735895156860352,0.5671989917755127,0.03183698654174805,0.0029900074005126953,0.06832599639892578,0.011420965194702148,0.05526995658874512,0.03244185447692871,0.08154010772705078,0.04314613342285156,0.0028870105743408203,0.21623516082763672,0.11446499824523926,0.7872660160064697,0.0415959358215332,0.125108003616333,0.17416095733642578,0.002110004425048828,0.0026481151580810547,0.03248000144958496,0.059504032135009766,0.035080909729003906,0.0026199817657470703,0.0018470287322998047,0.02415299415588379,0.08168506622314453,0.09329485893249512,0.07958602905273438,0.21392393112182617,0.09049797058105469,0.5561599731445312,0.0017309188842773438,0.035423994064331055,0.09253191947937012,0.4566020965576172,0.26935601234436035,0.003332853317260742,0.026254892349243164,0.10485410690307617,0.10407114028930664,0.14144110679626465,0.0792539119720459,0.0031042098999023438,0.23423194885253906,0.2550480365753174,0.600883960723877,0.002858877182006836,0.050050973892211914,0.1331310272216797,0.6163759231567383,0.01810002326965332,0.035672903060913086,0.06244087219238281,0.03072500228881836,0.054572105407714844,0.37024998664855957,0.03629589080810547,0.09598612785339355,0.1671440601348877,0.10978102684020996,0.7178628444671631,0.07458209991455078,0.04324197769165039,0.7996950149536133,0.01361989974975586,0.0019741058349609375,0.07398605346679688,0.28394317626953125,0.001970052719116211,0.07586097717285156,0.0031180381774902344,0.02670884132385254,0.07708907127380371,0.03445792198181152,0.052201032638549805,0.12042808532714844],"x":[4.090320348739624,1.648893117904663,3.4619815349578857,4.667968034744263,2.8307526111602783,4.537511587142944,5.077923059463501,5.653439521789551,4.923432111740112,6.925442457199097,6.64546799659729,3.574086904525757,0.999983549118042,6.298099517822266,7.45468544960022,4.756816148757935,2.5808045864105225,0.30690860748291016,4.148086071014404,3.357834577560425,3.6068685054779053,4.579475164413452,1.2186546325683594,4.895779609680176,0.558983564376831,4.4328391551971436,2.483785629272461,6.088378190994263,5.992499113082886,0.7091870307922363,0.9688894748687744,0.2618825435638428,2.157940149307251,4.670245885848999,2.3284060955047607,5.5493714809417725,3.611297130584717,0.6475095748901367,7.439609050750732,2.7145791053771973,3.591430425643921,2.0343730449676514,5.914428472518921,2.2025129795074463,4.61195969581604,0.9795176982879639,2.4651834964752197,1.1524765491485596,4.0719006061553955,0.6715214252471924,3.6089394092559814,0.843339204788208,5.147461175918579,2.1486446857452393,7.1381494998931885,1.2503764629364014,1.1317293643951416,5.986012697219849,2.2725794315338135,7.1079161167144775,7.236618757247925,3.509695053100586,3.642275094985962,1.684633493423462,2.2490460872650146,4.819885969161987,3.0263431072235107,4.5823915004730225,3.328597068786621,0.6052963733673096,6.207232236862183,1.1907966136932373,7.14648962020874,6.6163010597229,3.403926134109497,6.0320351123809814,7.315207242965698,6.928207159042358,4.5295164585113525,2.376138925552368,1.566617727279663,3.559080123901367,3.3301360607147217,2.435140371322632,5.085486173629761,4.535426378250122,5.8508899211883545,4.8614115715026855,7.216456651687622,0.583198070526123,6.5844855308532715,4.49699854850769,6.389211893081665,6.618567705154419,5.6169350147247314,0.674659013748169,2.6686511039733887,0.24029803276062012,2.2184131145477295,4.932769060134888,2.1260740756988525,6.716585397720337,3.4395556449890137,0.8517866134643555,0.7131874561309814,2.687230110168457,4.046197175979614,0.7358014583587646,5.582516431808472,7.1932830810546875,4.858009576797485,6.232504606246948,6.021356105804443,6.093942642211914,1.2249290943145752,4.064636468887329,0.6619160175323486,2.294928550720215,5.449322938919067,2.3315746784210205,6.8737571239471436,2.656337022781372,6.301667928695679,2.1787760257720947,2.0563535690307617,6.129469633102417,3.858684539794922,3.6646387577056885,2.4512417316436768,4.582173585891724,3.011631727218628,0.7946405410766602,3.24638295173645,0.6388039588928223,2.14557147026062,1.1332981586456299,7.307427167892456,3.204054117202759,7.004106044769287,7.142140626907349,4.734147548675537,3.6501834392547607,1.6589138507843018,3.504122018814087,3.6765801906585693,0.7601034641265869,4.458678960800171,4.456248998641968,7.756953954696655,5.957252025604248,5.09783148765564,7.141294240951538,3.2488505840301514,5.9703686237335205,4.536349534988403,6.31084942817688,6.343047142028809,4.972130060195923,2.386583089828491,0.2848329544067383,2.1600894927978516,4.724769830703735,3.3837549686431885,6.611196994781494,5.823562860488892,0.777700662612915,4.022213697433472,0.7915370464324951,5.023497581481934,2.2705767154693604,5.131868124008179,6.336971044540405,6.086857080459595,0.9867370128631592,4.473842144012451,2.4889466762542725,4.608405351638794,2.079023599624634,5.4236249923706055,0.6513330936431885,2.6211116313934326,6.229077577590942,3.9936695098876953,2.1882801055908203,7.54526686668396,6.931612014770508,6.252013921737671,3.494093179702759,4.991097688674927,2.8493664264678955,6.9448699951171875,4.458007097244263,4.095598459243774,1.197504997253418,3.4374470710754395,0.8163859844207764,6.427215576171875,2.2166011333465576,1.3184475898742676,5.614207983016968,7.277772665023804,3.2471554279327393,7.748010873794556,6.897837400436401,3.48088002204895],"y":[3,1,1,1,3,4,1,2,4,4,2,4,1,2,1,1,2,4,3,4,3,2,2,4,3,4,4,4,2,4,2,2,1,2,4,3,3,3,4,4,3,4,4,2,1,3,3,4,1,2,4,1,2,1,1,3,2,4,1,2,2,2,2,2,4,3,2,2,1,1,4,3,2,2,1,2,3,4,1,1,4,1,3,2,3,4,1,4,4,2,2,4,2,4,2,3,2,3,1,1,3,3,1,4,1,4,3,3,2,3,1,3,4,3,1,4,2,2,4,1,2,4,1,4,1,2,3,4,1,4,4,1,3,4,4,3,2,3,4,3,4,1,3,1,3,2,4,4,4,3,1,4,3,2,2,3,1,3,3,1,1,2,2,1,2,3,3,4,1,3,3,2,1,4,3,1,2,2,1,2,4,2,3,1,2,2,1,3,4,1,1,1,2,4,1,3,4,1,2,2,1,1,3,4,4]}},"id":"324487e2-838e-4c3c-9e95-7cfbb4fde5eb","type":"ColumnDataSource"},{"attributes":{"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"}},"id":"56f7b04b-c5aa-4008-a333-4d3758fd2783","type":"ResizeTool"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[0.0,10.0,330.29999999999995,768.3000000000001,528.1,371.7,734.3,323.2,677.8,616.5,602.6999999999999,736.5,304.6,730.3000000000001,693.4000000000001,560.1]}},"id":"db338f3f-f15c-4bc8-9349-f8fe281ba829","type":"ColumnDataSource"},{"attributes":{},"id":"4e19cc51-5753-47fc-82aa-179c4193ff29","type":"BasicTicker"},{"attributes":{"callback":null,"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"},"point_policy":"follow_mouse","tooltips":"\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Key:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@key&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Task:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@function&lt;/span&gt;\n    &lt;/div&gt;\n    "},"id":"60c6cf9d-aad6-4c97-8081-2209f3de2adb","type":"HoverTool"},{"attributes":{"children":[{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"}]},"id":"6af559f2-a6e1-4950-ba9f-048387d6128d","type":"Row"},{"attributes":{"dimensions":["width"],"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"}},"id":"1030fc5b-5334-4798-ad13-cef4ea311c63","type":"PanTool"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"9f95f799-7771-4ad5-971a-9de63d9853ef","type":"Line"},{"attributes":{},"id":"de55cc9c-9f3a-404e-904b-2802f56d2011","type":"BasicTickFormatter"},{"attributes":{"below":[{"id":"fa35adda-6459-4564-a15b-38dcd5e8455d","type":"LinearAxis"}],"left":[{"id":"7f6e1d30-46f4-4b86-8564-9e529fa1e3f8","type":"CategoricalAxis"}],"min_border_bottom":20,"min_border_left":75,"min_border_right":75,"plot_height":270,"plot_width":800,"renderers":[{"id":"fa35adda-6459-4564-a15b-38dcd5e8455d","type":"LinearAxis"},{"id":"6d246630-e9e5-4f95-ba01-b2aa1d0c19c9","type":"Grid"},{"id":"7f6e1d30-46f4-4b86-8564-9e529fa1e3f8","type":"CategoricalAxis"},{"id":"a392290d-36f0-4d4b-9099-01d82ff17052","type":"Grid"},{"id":"c048fb84-58fd-4b9f-8a98-f4d33df71226","type":"GlyphRenderer"}],"title":{"id":"23459dc7-ce97-402c-9ec4-d1bdef08a601","type":"Title"},"tool_events":{"id":"cabb9d7d-f4da-48b0-a2af-7e884f0044fa","type":"ToolEvents"},"toolbar":{"id":"24e17193-6ce2-4d18-93c7-0b76be90ce29","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"a844ea01-11a1-4cd7-9d5b-c493fe8614a8","type":"Range1d"},"y_range":{"id":"c194a858-15ff-4a14-b39f-4a594d57cea3","type":"FactorRange"}},"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"},{"attributes":{"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}},"id":"316e7dc2-f17d-4e1d-8093-9f0f7fce884c","type":"SaveTool"},{"attributes":{"below":[{"id":"ac83ff71-b437-4576-8fe3-b780ff8fe66a","type":"LinearAxis"}],"extra_y_ranges":{"memory":{"id":"8eb96b38-9a83-4726-b888-7cde7fc818b7","type":"Range1d"}},"left":[{"id":"8a4fc9d0-334a-4281-9c9b-0c2ff14d5ef1","type":"LinearAxis"}],"min_border_left":75,"min_border_right":75,"min_border_top":20,"plot_height":270,"plot_width":800,"renderers":[{"id":"ac83ff71-b437-4576-8fe3-b780ff8fe66a","type":"LinearAxis"},{"id":"a54b818e-87ca-4a0b-97f7-0a6809e9059d","type":"Grid"},{"id":"8a4fc9d0-334a-4281-9c9b-0c2ff14d5ef1","type":"LinearAxis"},{"id":"56de1305-6814-4970-a30d-a7ce39c12a6e","type":"Grid"},{"id":"a7ff574e-e2fe-4480-8fde-8e6b4c5b3cd8","type":"Legend"},{"id":"fd52e04e-df96-4a70-b161-45cf427b98e9","type":"GlyphRenderer"},{"id":"1515fc11-d036-41f7-98ed-b27b7274f6e3","type":"GlyphRenderer"},{"id":"8b1ef460-928f-459a-8664-58ab7d3b7f46","type":"LinearAxis"}],"right":[{"id":"8b1ef460-928f-459a-8664-58ab7d3b7f46","type":"LinearAxis"}],"title":null,"tool_events":{"id":"af5a62f5-5dce-40ab-83f5-98c8168d3c17","type":"ToolEvents"},"toolbar":{"id":"366462a6-657c-42b4-a8f3-c5fc896ad8ac","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"a844ea01-11a1-4cd7-9d5b-c493fe8614a8","type":"Range1d"},"y_range":{"id":"eceaedea-8558-4bd8-a284-e501c2c1f53f","type":"Range1d"}},"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"8727638e-67e2-4d9e-8ab1-83d2f0f7b78a","type":"ToolEvents"},{"attributes":{"axis_label":"% CPU","formatter":{"id":"e5d38b72-65f8-4c5f-9301-2d61f858701f","type":"BasicTickFormatter"},"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"},"ticker":{"id":"d4ec53fe-51f5-4441-a9f2-abac01525ca8","type":"BasicTicker"}},"id":"8a4fc9d0-334a-4281-9c9b-0c2ff14d5ef1","type":"LinearAxis"},{"attributes":{"axis_label":"Time (s)","formatter":{"id":"cad5e274-6881-4569-a0d3-5081cc7c54b2","type":"BasicTickFormatter"},"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"},"ticker":{"id":"666ff0fc-c7f6-46c3-a877-2808aee6a919","type":"BasicTicker"}},"id":"7a558955-1fc6-4af0-add8-59310814b89e","type":"LinearAxis"},{"attributes":{"dimensions":["width"],"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}},"id":"0ee86516-94b0-46f0-aa72-66652b94e1f9","type":"PanTool"},{"attributes":{},"id":"d2ea5d69-9bd3-4cb3-8bc9-144c4897d54e","type":"BasicTicker"},{"attributes":{"fill_color":{"field":"color"},"height":{"units":"data","value":1},"line_color":{"value":"gray"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"8472bee2-d244-4c5a-8b55-8ff0b932790e","type":"Rect"},{"attributes":{"dimensions":["width"],"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}},"id":"01607153-0230-4ac3-9f8c-d1a4cd757dc1","type":"PanTool"},{"attributes":{"children":[{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"}]},"id":"b14067be-b8a7-4faf-b2e0-e02cb5b43b47","type":"Row"},{"attributes":{"axis_label":"Memory (MB)","formatter":{"id":"f3e1fe51-1c05-421e-b9aa-5d5e419c904d","type":"BasicTickFormatter"},"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"},"ticker":{"id":"974d387c-d416-442a-8e80-b80bafd56fdd","type":"BasicTicker"},"y_range_name":"memory"},"id":"8b7d6a14-e51f-4254-ab14-b06d5fdeb5ae","type":"LinearAxis"},{"attributes":{"callback":null,"end":672.661504,"start":107.405312},"id":"8eb96b38-9a83-4726-b888-7cde7fc818b7","type":"Range1d"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[107.405312,207.396864,329.351168,408.690688,415.141888,432.96768,449.88416,434.573312,456.040448,462.45888,476.049408,482.648064,549.711872,560.427008,569.905152,672.661504]}},"id":"94f67ebd-d38c-4d01-a994-01ca4334380f","type":"ColumnDataSource"},{"attributes":{"dimensions":["width"],"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}},"id":"9fd31509-5922-44dd-9225-7cd9858cd4bf","type":"WheelZoomTool"},{"attributes":{"data_source":{"id":"26d61ca0-27d5-44bd-9895-d44e90dc9c63","type":"ColumnDataSource"},"glyph":{"id":"2a7fc8dd-c469-41a3-9f80-2813a7f73188","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"f4c303f3-6e23-4b1d-9169-f5f6c4dd3c32","type":"Line"},"selection_glyph":null,"y_range_name":"memory"},"id":"1bb98724-8075-4449-a3a0-0680b1b52dc7","type":"GlyphRenderer"},{"attributes":{"line_color":{"value":"#253494"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"ecd76a45-c737-436b-b50d-a3ab174d0232","type":"Line"},{"attributes":{"children":[{"id":"56a4d265-d18a-47c7-839d-73831931821d","type":"Row"},{"id":"e2782def-4c2f-4978-bf23-a7f4a697a874","type":"Row"}]},"id":"022db2d4-ddf6-408c-b942-9bdef1b126f6","type":"Column"},{"attributes":{"line_color":{"value":"#253494"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"f7827b56-1485-4097-aed5-6ee89dcfd0b0","type":"Line"},{"attributes":{"below":[{"id":"78c3d915-16e6-4937-bb1e-9799eaec2d06","type":"LinearAxis"}],"extra_y_ranges":{"memory":{"id":"508bdb6f-e07e-466a-8521-8405c40cbe07","type":"Range1d"}},"left":[{"id":"ff05024d-2394-4558-ae1b-b917a2ba0682","type":"LinearAxis"}],"min_border_left":75,"min_border_right":75,"min_border_top":20,"plot_height":270,"plot_width":800,"renderers":[{"id":"78c3d915-16e6-4937-bb1e-9799eaec2d06","type":"LinearAxis"},{"id":"9c0588b9-efcf-4ebc-a8bc-88e44d8e8d6d","type":"Grid"},{"id":"ff05024d-2394-4558-ae1b-b917a2ba0682","type":"LinearAxis"},{"id":"df7125c8-ab3e-415f-8ecf-5d79f0fab3cc","type":"Grid"},{"id":"207dc265-cbfe-4364-88fe-435408c7ca5b","type":"Legend"},{"id":"f4fb45fd-eade-4141-885a-2dbe73c616d0","type":"GlyphRenderer"},{"id":"37713557-8be0-42a5-bcde-0e4bf502a43b","type":"GlyphRenderer"},{"id":"2c24462d-d7ab-4829-b1dc-907407db059f","type":"LinearAxis"}],"right":[{"id":"2c24462d-d7ab-4829-b1dc-907407db059f","type":"LinearAxis"}],"title":null,"tool_events":{"id":"266d937c-f444-4e71-ab37-edbb84c6efa9","type":"ToolEvents"},"toolbar":{"id":"62861c3d-c083-4523-a705-8b6a390521f3","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"b6abbdb1-6de8-443e-ab9c-0ef20040dd5e","type":"Range1d"},"y_range":{"id":"7ea04a48-51e9-44de-8915-2fa134ac12b3","type":"Range1d"}},"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"},{"attributes":{"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"},"ticker":{"id":"649c37ff-7659-4d05-a3ec-4eceacc3980e","type":"BasicTicker"}},"id":"a54b818e-87ca-4a0b-97f7-0a6809e9059d","type":"Grid"},{"attributes":{"legends":[["% CPU",[{"id":"a5200809-0df0-44b0-a375-5bcbf8602156","type":"GlyphRenderer"}]],["Memory",[{"id":"1bb98724-8075-4449-a3a0-0680b1b52dc7","type":"GlyphRenderer"}]]],"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}},"id":"e5d1f089-426c-4cda-aab5-02de95b9fbbc","type":"Legend"},{"attributes":{},"id":"16cbf0d3-b5f2-4c59-8f6e-0d2e76dfe642","type":"CategoricalTickFormatter"},{"attributes":{},"id":"f241c39f-da17-47a3-8f93-c780030c6d9e","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}]},"id":"983713ad-1d5e-475e-a24f-1aa93d5f5b25","type":"Row"},{"attributes":{"axis_label":"Time (s)","formatter":{"id":"badd455e-47c5-4b42-9d70-550fb0e124c5","type":"BasicTickFormatter"},"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"},"ticker":{"id":"649c37ff-7659-4d05-a3ec-4eceacc3980e","type":"BasicTicker"}},"id":"ac83ff71-b437-4576-8fe3-b780ff8fe66a","type":"LinearAxis"},{"attributes":{},"id":"f38d1496-6647-41ef-8d08-625d87f3fb87","type":"CategoricalTicker"},{"attributes":{"data_source":{"id":"a5a8aa09-244f-4651-a2aa-d7571d37199b","type":"ColumnDataSource"},"glyph":{"id":"3c69d89e-8baf-4b85-bf1c-d712031cb607","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"5dda5c95-83d3-44c4-a2d4-218273ee0147","type":"Line"},"selection_glyph":null},"id":"f4fb45fd-eade-4141-885a-2dbe73c616d0","type":"GlyphRenderer"},{"attributes":{},"id":"10d7adf1-ccb8-4fb0-a81c-73246bace5e0","type":"CategoricalTicker"},{"attributes":{"data_source":{"id":"c4dbad8e-f958-46ff-b631-1d2ab1c130e0","type":"ColumnDataSource"},"glyph":{"id":"4212067b-9f87-4cf6-9414-e89d8b31fb5c","type":"Rect"},"hover_glyph":null,"nonselection_glyph":{"id":"665a67da-06fa-45d0-b1ee-617f262d7ed9","type":"Rect"},"selection_glyph":null},"id":"3128e687-7db1-4280-aa03-2ff2fce4fb5d","type":"GlyphRenderer"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"041d8ec8-8540-4805-acf1-bba13281c037","type":"HoverTool"},{"id":"b277f30f-4d13-46b6-b357-06c9248a7cb3","type":"SaveTool"},{"id":"1da6fe6d-7fa5-49ad-8a9a-660a9ff4a6dd","type":"ResetTool"},{"id":"bacd5ad1-3ddd-46db-90ef-850a41d8a87a","type":"ResizeTool"},{"id":"09eac18e-7971-4c56-ad74-c81737bb2f4a","type":"WheelZoomTool"},{"id":"0c20c69b-894c-4a8e-997f-1ed54579b866","type":"PanTool"}]},"id":"9253346f-4aa2-4704-a3d3-8dce5ecfccc2","type":"Toolbar"},{"attributes":{},"id":"3ac60952-1bda-47aa-acd7-8e67fed286ca","type":"BasicTickFormatter"},{"attributes":{"sizing_mode":"scale_width","toolbar_location":"above","tools":[{"id":"60c6cf9d-aad6-4c97-8081-2209f3de2adb","type":"HoverTool"},{"id":"4efc83c9-2dce-4555-a359-c255fe652517","type":"SaveTool"},{"id":"ff25866a-4820-4956-9fcc-a2e60b204a8a","type":"ResetTool"},{"id":"ec5c57b2-4e32-4c11-aa6c-9a589ec243ec","type":"ResizeTool"},{"id":"40dbcb50-3651-42e6-8dba-b24a2547f8fb","type":"WheelZoomTool"},{"id":"5598a0db-fc08-4975-8b8f-03ea29f2d2c0","type":"PanTool"},{"id":"8dd2e5ee-b298-40bb-9c66-3a54bce317ab","type":"SaveTool"},{"id":"ac323c34-472a-4357-83bc-d81a550f1bb0","type":"ResetTool"},{"id":"d3ef2f7b-9bc6-4b0f-9c94-db0858d33ce6","type":"ResizeTool"},{"id":"42c855ab-6ad3-416b-b320-651d85d2eceb","type":"WheelZoomTool"},{"id":"0ee86516-94b0-46f0-aa72-66652b94e1f9","type":"PanTool"}]},"id":"1d06070e-8bf4-4c3b-93e1-02f8ce2a61ed","type":"ToolbarBox"},{"attributes":{"children":[{"id":"8d82e340-8e65-4362-a647-570c3a69ed58","type":"Row"},{"id":"3ddd4f36-b37f-4aa0-ab20-9f1bfc23685d","type":"Row"}]},"id":"8939d3ae-c51a-438d-87eb-21ba7679ac6d","type":"Column"},{"attributes":{"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"},"ticker":{"id":"209af650-221e-4300-b7fe-9071c41333b6","type":"BasicTicker"}},"id":"9c0588b9-efcf-4ebc-a8bc-88e44d8e8d6d","type":"Grid"},{"attributes":{"data_source":{"id":"90d21d56-0a4a-46d3-ab60-f196b26442fb","type":"ColumnDataSource"},"glyph":{"id":"1bd55b8d-e1bc-464e-a40a-8032834cee71","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"d0b33a81-97b4-4567-9831-f80e56d02f71","type":"Line"},"selection_glyph":null,"y_range_name":"memory"},"id":"f9320814-c56b-4884-9328-7990e2ef8eb4","type":"GlyphRenderer"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"316e7dc2-f17d-4e1d-8093-9f0f7fce884c","type":"SaveTool"},{"id":"b0065189-b477-4fd9-98aa-cc425f4f2cc5","type":"ResetTool"},{"id":"9e504ca5-f977-4231-969b-462c07ef05f1","type":"ResizeTool"},{"id":"4615facf-b22a-4fda-a91a-2548408ef904","type":"WheelZoomTool"},{"id":"b1a6eef8-8e90-41d2-aa0c-a2f14d3834da","type":"PanTool"}]},"id":"9754f3a6-b8af-40a0-95fc-e4b9d2257ec0","type":"Toolbar"},{"attributes":{"line_color":{"value":"#41b6c4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"1bd55b8d-e1bc-464e-a40a-8032834cee71","type":"Line"},{"attributes":{"dimensions":["width"],"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"}},"id":"0c20c69b-894c-4a8e-997f-1ed54579b866","type":"PanTool"},{"attributes":{"axis_label":"Worker ID","axis_line_color":{"value":null},"formatter":{"id":"16cbf0d3-b5f2-4c59-8f6e-0d2e76dfe642","type":"CategoricalTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"},"ticker":{"id":"7a97d14d-4e29-4e39-8fea-73c2bc27a141","type":"CategoricalTicker"}},"id":"132e3539-f71f-4ddb-9acd-0424e054d924","type":"CategoricalAxis"},{"attributes":{},"id":"8f7eceea-1a91-46c4-86a1-9bd3a966f1ec","type":"BasicTicker"},{"attributes":{"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}},"id":"d3ef2f7b-9bc6-4b0f-9c94-db0858d33ce6","type":"ResizeTool"},{"attributes":{"axis_label":"Worker ID","axis_line_color":{"value":null},"formatter":{"id":"547cb4ef-5c4f-479e-a2e6-24632f30854e","type":"CategoricalTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"},"ticker":{"id":"f38d1496-6647-41ef-8d08-625d87f3fb87","type":"CategoricalTicker"}},"id":"1d65fcd8-b6d8-4ea0-b8bc-6830a26af533","type":"CategoricalAxis"},{"attributes":{"data_source":{"id":"be44546b-c6c8-4dfe-af38-d3c473ee12f8","type":"ColumnDataSource"},"glyph":{"id":"446184f5-46a2-4e6f-a8c2-f2667a8f9ce9","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"c2bb4f30-1707-4010-b817-1f1e7ea29d8f","type":"Line"},"selection_glyph":null},"id":"607a638d-c30b-4e72-8851-e1be95392de5","type":"GlyphRenderer"},{"attributes":{"dimension":1,"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"},"ticker":{"id":"e68b45a6-526a-4fdb-a14b-48a237142ce0","type":"BasicTicker"}},"id":"d896d296-7a50-4909-92cb-8f8df9c093e8","type":"Grid"},{"attributes":{"axis_label":null,"axis_line_color":{"value":null},"formatter":{"id":"78c33050-ab06-43cf-ba20-f0d90fb053e9","type":"BasicTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"},"ticker":{"id":"d2ea5d69-9bd3-4cb3-8bc9-144c4897d54e","type":"BasicTicker"}},"id":"79828bea-99dc-4fe2-9fa4-23103fafc717","type":"LinearAxis"},{"attributes":{"data_source":{"id":"94f67ebd-d38c-4d01-a994-01ca4334380f","type":"ColumnDataSource"},"glyph":{"id":"d358fedf-f4f3-4588-acd4-9fe8cb11b09d","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"9f95f799-7771-4ad5-971a-9de63d9853ef","type":"Line"},"selection_glyph":null,"y_range_name":"memory"},"id":"37713557-8be0-42a5-bcde-0e4bf502a43b","type":"GlyphRenderer"},{"attributes":{"callback":null,"end":672.661504,"start":107.405312},"id":"508bdb6f-e07e-466a-8521-8405c40cbe07","type":"Range1d"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"d0b33a81-97b4-4567-9831-f80e56d02f71","type":"Line"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"0a74f544-8104-47f3-a6ef-4937b3c710c8","type":"HoverTool"},{"id":"32e95189-6811-45c2-9cf6-016582d9551e","type":"SaveTool"},{"id":"65dc33f7-e685-4547-8ad9-00adb6128a5c","type":"ResetTool"},{"id":"56f7b04b-c5aa-4008-a333-4d3758fd2783","type":"ResizeTool"},{"id":"8b2572ee-b9c8-4ebb-8036-b73cd522a2b3","type":"WheelZoomTool"},{"id":"1030fc5b-5334-4798-ad13-cef4ea311c63","type":"PanTool"}]},"id":"4faa29a2-312b-4b4f-bd25-b39674c2ecb7","type":"Toolbar"},{"attributes":{"children":[{"id":"89ca9c3b-698b-490d-9773-4dd62fa965a1","type":"ToolbarBox"},{"id":"0b6f3d60-74ca-4291-b454-f3d3261890a3","type":"Column"}]},"id":"1c687d85-0b21-4a09-afff-020ba88a9d4f","type":"Column"},{"attributes":{},"id":"07be102b-9723-41c2-9fda-2cd7fda0b240","type":"ToolEvents"},{"attributes":{},"id":"db1c842c-f47b-4c32-90b4-c170224bf1f9","type":"BasicTicker"},{"attributes":{"axis_label":"% CPU","formatter":{"id":"e46c336c-60e5-4550-929b-eb62d309213a","type":"BasicTickFormatter"},"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"},"ticker":{"id":"e68b45a6-526a-4fdb-a14b-48a237142ce0","type":"BasicTicker"}},"id":"2e847029-1c9f-448f-b1a6-6e3f491bca6f","type":"LinearAxis"},{"attributes":{"legends":[["% CPU",[{"id":"fd52e04e-df96-4a70-b161-45cf427b98e9","type":"GlyphRenderer"}]],["Memory",[{"id":"1515fc11-d036-41f7-98ed-b27b7274f6e3","type":"GlyphRenderer"}]]],"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}},"id":"a7ff574e-e2fe-4480-8fde-8e6b4c5b3cd8","type":"Legend"},{"attributes":{"data_source":{"id":"db338f3f-f15c-4bc8-9349-f8fe281ba829","type":"ColumnDataSource"},"glyph":{"id":"ecd76a45-c737-436b-b50d-a3ab174d0232","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"f747a1f2-f7ac-42b9-9f89-1b35b0d3ded0","type":"Line"},"selection_glyph":null},"id":"fd52e04e-df96-4a70-b161-45cf427b98e9","type":"GlyphRenderer"},{"attributes":{"callback":null,"end":7.773194074630737},"id":"ce94472a-73c1-4d1f-9b41-7cd6f641b4f2","type":"Range1d"},{"attributes":{"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}},"id":"6c0dff3a-eb7e-49da-ad46-94a0e6f21074","type":"ResizeTool"},{"attributes":{"data_source":{"id":"324487e2-838e-4c3c-9e95-7cfbb4fde5eb","type":"ColumnDataSource"},"glyph":{"id":"8472bee2-d244-4c5a-8b55-8ff0b932790e","type":"Rect"},"hover_glyph":null,"nonselection_glyph":{"id":"1276b74c-47b0-454a-8499-a38ff0663dec","type":"Rect"},"selection_glyph":null},"id":"8226ac37-6730-4113-95d8-087e4250177b","type":"GlyphRenderer"},{"attributes":{"dimension":1,"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"},"ticker":{"id":"d4ec53fe-51f5-4441-a9f2-abac01525ca8","type":"BasicTicker"}},"id":"56de1305-6814-4970-a30d-a7ce39c12a6e","type":"Grid"},{"attributes":{},"id":"a11d51e4-fceb-4086-b1f5-c2365aa288df","type":"BasicTicker"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[107.405312,207.396864,329.351168,408.690688,415.141888,432.96768,449.88416,434.573312,456.040448,462.45888,476.049408,482.648064,549.711872,560.427008,569.905152,672.661504]}},"id":"90d21d56-0a4a-46d3-ab60-f196b26442fb","type":"ColumnDataSource"},{"attributes":{"callback":null,"factors":["0","1","2","3"]},"id":"a75798d2-1506-4286-addf-9fca343bcbb9","type":"FactorRange"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"91727b18-11a8-4a67-be81-6685744a9770","type":"Line"},{"attributes":{"callback":null,"end":7.773194074630737},"id":"02944fa3-4f9c-4714-8e33-b6ff018434ab","type":"Range1d"},{"attributes":{"axis_label":"% CPU","formatter":{"id":"25db293e-6510-4937-aba7-d7ccb00022cd","type":"BasicTickFormatter"},"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"},"ticker":{"id":"8f7eceea-1a91-46c4-86a1-9bd3a966f1ec","type":"BasicTicker"}},"id":"ff05024d-2394-4558-ae1b-b917a2ba0682","type":"LinearAxis"},{"attributes":{"callback":null,"end":672.661504,"start":107.405312},"id":"45f0625a-d0bc-45d2-8bc5-0a47dc3335f3","type":"Range1d"},{"attributes":{},"id":"42bd6979-489b-4a1d-903d-09d4993022d5","type":"ToolEvents"},{"attributes":{"dimensions":["width"],"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}},"id":"d9116fb3-6729-489e-b50c-cfb96a856e69","type":"PanTool"},{"attributes":{},"id":"f4927e47-4580-4edc-af41-d45e4675b282","type":"ToolEvents"},{"attributes":{},"id":"badd455e-47c5-4b42-9d70-550fb0e124c5","type":"BasicTickFormatter"},{"attributes":{"sizing_mode":"scale_width","toolbar_location":"above","tools":[{"id":"fb8ef419-e82b-43ec-b58b-991438980a7c","type":"HoverTool"},{"id":"c3300d7b-9212-418b-a13c-7ecae98f2e88","type":"SaveTool"},{"id":"56dc2269-df20-4d63-ab9f-689167a79056","type":"ResetTool"},{"id":"087346fc-3399-4c91-9a27-ef591ac70fd0","type":"ResizeTool"},{"id":"dea74d07-bbfd-4335-a2db-4c46258ecf81","type":"WheelZoomTool"},{"id":"fb460549-754a-4ec7-ad9a-b67d50398291","type":"PanTool"},{"id":"e4feebc5-f88a-4ab0-a499-568dfedc9fd1","type":"SaveTool"},{"id":"1310395e-7669-468a-9cc6-f51bc5c3c378","type":"ResetTool"},{"id":"6c0dff3a-eb7e-49da-ad46-94a0e6f21074","type":"ResizeTool"},{"id":"06d587c2-a9bd-42ae-b9a1-7cfba80ee875","type":"WheelZoomTool"},{"id":"d9116fb3-6729-489e-b50c-cfb96a856e69","type":"PanTool"}]},"id":"89ca9c3b-698b-490d-9773-4dd62fa965a1","type":"ToolbarBox"},{"attributes":{"below":[{"id":"d5d5bf65-24c8-450f-aa8f-2e231f3066fe","type":"LinearAxis"}],"extra_y_ranges":{"memory":{"id":"22f931bc-da2a-4ccb-b3bb-665b3910ac35","type":"Range1d"}},"left":[{"id":"2e847029-1c9f-448f-b1a6-6e3f491bca6f","type":"LinearAxis"}],"min_border_left":75,"min_border_right":75,"min_border_top":20,"plot_height":270,"plot_width":800,"renderers":[{"id":"d5d5bf65-24c8-450f-aa8f-2e231f3066fe","type":"LinearAxis"},{"id":"5ad28cac-4bfa-4d51-9788-a941efe38c0c","type":"Grid"},{"id":"2e847029-1c9f-448f-b1a6-6e3f491bca6f","type":"LinearAxis"},{"id":"d896d296-7a50-4909-92cb-8f8df9c093e8","type":"Grid"},{"id":"29c68d7f-de54-4a9d-b956-274554b8a13b","type":"Legend"},{"id":"607a638d-c30b-4e72-8851-e1be95392de5","type":"GlyphRenderer"},{"id":"f9320814-c56b-4884-9328-7990e2ef8eb4","type":"GlyphRenderer"},{"id":"8b7d6a14-e51f-4254-ab14-b06d5fdeb5ae","type":"LinearAxis"}],"right":[{"id":"8b7d6a14-e51f-4254-ab14-b06d5fdeb5ae","type":"LinearAxis"}],"title":null,"tool_events":{"id":"8727638e-67e2-4d9e-8ab1-83d2f0f7b78a","type":"ToolEvents"},"toolbar":{"id":"9754f3a6-b8af-40a0-95fc-e4b9d2257ec0","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"02944fa3-4f9c-4714-8e33-b6ff018434ab","type":"Range1d"},"y_range":{"id":"c77d78ee-23f5-4fac-94b5-a90b1917a53e","type":"Range1d"}},"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"},{"attributes":{"grid_line_color":{"value":null},"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"},"ticker":{"id":"a11d51e4-fceb-4086-b1f5-c2365aa288df","type":"BasicTicker"}},"id":"225ba525-fb74-4429-8d47-7997972caf40","type":"Grid"},{"attributes":{"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"}},"id":"4efc83c9-2dce-4555-a359-c255fe652517","type":"SaveTool"},{"attributes":{"dimensions":["width"],"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"}},"id":"fb460549-754a-4ec7-ad9a-b67d50398291","type":"PanTool"},{"attributes":{},"id":"dd2fa916-1063-418a-94f7-666cdfe684a2","type":"BasicTickFormatter"},{"attributes":{"dimensions":["width"],"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"}},"id":"5598a0db-fc08-4975-8b8f-03ea29f2d2c0","type":"PanTool"},{"attributes":{"children":[{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}]},"id":"6f3a37d9-570b-4d53-a0ac-91d4b8b2ddb4","type":"Row"},{"attributes":{},"id":"cad5e274-6881-4569-a0d3-5081cc7c54b2","type":"BasicTickFormatter"},{"attributes":{"callback":null,"end":768.3000000000001},"id":"7ea04a48-51e9-44de-8915-2fa134ac12b3","type":"Range1d"},{"attributes":{"data_source":{"id":"8b4e092d-d328-4d98-b1f2-85448a0874cb","type":"ColumnDataSource"},"glyph":{"id":"9c46ce44-025a-41c8-9b0d-9983f0e70288","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"a3f322f6-0b62-4a37-8f48-eeee02eb9a28","type":"Line"},"selection_glyph":null,"y_range_name":"memory"},"id":"1515fc11-d036-41f7-98ed-b27b7274f6e3","type":"GlyphRenderer"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"8dd2e5ee-b298-40bb-9c66-3a54bce317ab","type":"SaveTool"},{"id":"ac323c34-472a-4357-83bc-d81a550f1bb0","type":"ResetTool"},{"id":"d3ef2f7b-9bc6-4b0f-9c94-db0858d33ce6","type":"ResizeTool"},{"id":"42c855ab-6ad3-416b-b320-651d85d2eceb","type":"WheelZoomTool"},{"id":"0ee86516-94b0-46f0-aa72-66652b94e1f9","type":"PanTool"}]},"id":"7b815b60-9cb6-4de4-8758-4ad8d38d5c90","type":"Toolbar"},{"attributes":{"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"}},"id":"1da6fe6d-7fa5-49ad-8a9a-660a9ff4a6dd","type":"ResetTool"},{"attributes":{"dimensions":["width"],"plot":{"id":"c774bdb1-8e21-43a4-9b37-18419b27af90","subtype":"Figure","type":"Plot"}},"id":"06d587c2-a9bd-42ae-b9a1-7cfba80ee875","type":"WheelZoomTool"},{"attributes":{"dimensions":["width"],"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"}},"id":"09eac18e-7971-4c56-ad74-c81737bb2f4a","type":"WheelZoomTool"},{"attributes":{"callback":null,"factors":["0","1","2","3"]},"id":"75692625-5c8b-467b-8b6c-01d3fd732e5f","type":"FactorRange"},{"attributes":{},"id":"789b6ee3-1d80-4592-9c65-729328de1119","type":"BasicTicker"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[107.405312,207.396864,329.351168,408.690688,415.141888,432.96768,449.88416,434.573312,456.040448,462.45888,476.049408,482.648064,549.711872,560.427008,569.905152,672.661504]}},"id":"26d61ca0-27d5-44bd-9895-d44e90dc9c63","type":"ColumnDataSource"},{"attributes":{"legends":[["% CPU",[{"id":"607a638d-c30b-4e72-8851-e1be95392de5","type":"GlyphRenderer"}]],["Memory",[{"id":"f9320814-c56b-4884-9328-7990e2ef8eb4","type":"GlyphRenderer"}]]],"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}},"id":"29c68d7f-de54-4a9d-b956-274554b8a13b","type":"Legend"},{"attributes":{"below":[{"id":"ca21369f-b2ec-488c-a095-ea5525b17cf4","type":"LinearAxis"}],"left":[{"id":"1d65fcd8-b6d8-4ea0-b8bc-6830a26af533","type":"CategoricalAxis"}],"min_border_bottom":20,"min_border_left":75,"min_border_right":75,"plot_height":270,"plot_width":800,"renderers":[{"id":"ca21369f-b2ec-488c-a095-ea5525b17cf4","type":"LinearAxis"},{"id":"225ba525-fb74-4429-8d47-7997972caf40","type":"Grid"},{"id":"1d65fcd8-b6d8-4ea0-b8bc-6830a26af533","type":"CategoricalAxis"},{"id":"cf46d440-c8cb-4434-8669-b1bc92932632","type":"Grid"},{"id":"3128e687-7db1-4280-aa03-2ff2fce4fb5d","type":"GlyphRenderer"}],"title":{"id":"1efb7fe1-9818-4fe8-b1c9-98b73f6fa5db","type":"Title"},"tool_events":{"id":"2d1b5cc7-68ca-421d-8449-bc3b25bc8019","type":"ToolEvents"},"toolbar":{"id":"9253346f-4aa2-4704-a3d3-8dce5ecfccc2","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"b6abbdb1-6de8-443e-ab9c-0ef20040dd5e","type":"Range1d"},"y_range":{"id":"75692625-5c8b-467b-8b6c-01d3fd732e5f","type":"FactorRange"}},"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"},{"attributes":{"fill_color":{"field":"color"},"height":{"units":"data","value":1},"line_color":{"value":"gray"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"4212067b-9f87-4cf6-9414-e89d8b31fb5c","type":"Rect"},{"attributes":{"axis_label":null,"axis_line_color":{"value":null},"formatter":{"id":"f241c39f-da17-47a3-8f93-c780030c6d9e","type":"BasicTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"},"ticker":{"id":"49c74b54-51fa-4156-acf1-bf95b5be42b7","type":"BasicTicker"}},"id":"fa35adda-6459-4564-a15b-38dcd5e8455d","type":"LinearAxis"},{"attributes":{"axis_label":"Memory (MB)","formatter":{"id":"c5caca52-1b4c-45e7-a6f0-d9fd35e15af4","type":"BasicTickFormatter"},"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"},"ticker":{"id":"789b6ee3-1d80-4592-9c65-729328de1119","type":"BasicTicker"},"y_range_name":"memory"},"id":"85ee14a6-6375-4a03-83cb-5da9d2deb856","type":"LinearAxis"},{"attributes":{"callback":null,"end":768.3000000000001},"id":"11934803-7e38-4937-9783-50fbb0916c6b","type":"Range1d"},{"attributes":{},"id":"5f977cad-28c5-428d-947a-84d6c9e7dfc4","type":"BasicTickFormatter"},{"attributes":{},"id":"d705e261-f6d8-4cd3-986f-c29182ef51a7","type":"BasicTickFormatter"},{"attributes":{"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}},"id":"6368e9c1-8a8d-4ec8-aa25-9c626e36c863","type":"ResizeTool"},{"attributes":{"dimensions":["width"],"plot":{"id":"73d41423-0a8e-420d-b11d-aacadd3de1e8","subtype":"Figure","type":"Plot"}},"id":"4615facf-b22a-4fda-a91a-2548408ef904","type":"WheelZoomTool"},{"attributes":{},"id":"266d937c-f444-4e71-ab37-edbb84c6efa9","type":"ToolEvents"},{"attributes":{"sizing_mode":"scale_width","toolbar_location":"above","tools":[{"id":"041d8ec8-8540-4805-acf1-bba13281c037","type":"HoverTool"},{"id":"b277f30f-4d13-46b6-b357-06c9248a7cb3","type":"SaveTool"},{"id":"1da6fe6d-7fa5-49ad-8a9a-660a9ff4a6dd","type":"ResetTool"},{"id":"bacd5ad1-3ddd-46db-90ef-850a41d8a87a","type":"ResizeTool"},{"id":"09eac18e-7971-4c56-ad74-c81737bb2f4a","type":"WheelZoomTool"},{"id":"0c20c69b-894c-4a8e-997f-1ed54579b866","type":"PanTool"},{"id":"042d1673-b822-4411-b979-386ab439b9eb","type":"SaveTool"},{"id":"0313b309-7a10-4656-952b-1805c0f57e7d","type":"ResetTool"},{"id":"6368e9c1-8a8d-4ec8-aa25-9c626e36c863","type":"ResizeTool"},{"id":"9fd31509-5922-44dd-9225-7cd9858cd4bf","type":"WheelZoomTool"},{"id":"01607153-0230-4ac3-9f8c-d1a4cd757dc1","type":"PanTool"}]},"id":"ce821ee1-ad0a-42c1-8558-bc9ef4937d2e","type":"ToolbarBox"},{"attributes":{},"id":"666ff0fc-c7f6-46c3-a877-2808aee6a919","type":"BasicTicker"},{"attributes":{"below":[{"id":"79828bea-99dc-4fe2-9fa4-23103fafc717","type":"LinearAxis"}],"left":[{"id":"132e3539-f71f-4ddb-9acd-0424e054d924","type":"CategoricalAxis"}],"min_border_bottom":20,"min_border_left":75,"min_border_right":75,"plot_height":270,"plot_width":800,"renderers":[{"id":"79828bea-99dc-4fe2-9fa4-23103fafc717","type":"LinearAxis"},{"id":"5657fbc3-a056-4d4a-b5de-e1860617ba2e","type":"Grid"},{"id":"132e3539-f71f-4ddb-9acd-0424e054d924","type":"CategoricalAxis"},{"id":"a4e84e99-011e-4a36-a85c-0a6dc5e52a38","type":"Grid"},{"id":"b64a9f55-5528-4852-b3aa-4c815dd542bd","type":"GlyphRenderer"}],"title":{"id":"9dc47985-8e68-4b3c-9fea-2f464af1136a","type":"Title"},"tool_events":{"id":"07be102b-9723-41c2-9fda-2cd7fda0b240","type":"ToolEvents"},"toolbar":{"id":"756ee7ba-a675-4815-b8cc-4c0b52f3dae4","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"ce94472a-73c1-4d1f-9b41-7cd6f641b4f2","type":"Range1d"},"y_range":{"id":"a75798d2-1506-4286-addf-9fca343bcbb9","type":"FactorRange"}},"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"a3f322f6-0b62-4a37-8f48-eeee02eb9a28","type":"Line"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"height":{"units":"data","value":1},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"f0c3e8db-f6a1-40cd-b6df-7b5fd9b9b444","type":"Rect"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"f747a1f2-f7ac-42b9-9f89-1b35b0d3ded0","type":"Line"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"height":{"units":"data","value":1},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"1276b74c-47b0-454a-8499-a38ff0663dec","type":"Rect"},{"attributes":{},"id":"1b07aaa7-c489-48ef-a925-25ccde528d01","type":"BasicTickFormatter"},{"attributes":{},"id":"649c37ff-7659-4d05-a3ec-4eceacc3980e","type":"BasicTicker"},{"attributes":{"children":[{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}]},"id":"e2782def-4c2f-4978-bf23-a7f4a697a874","type":"Row"},{"attributes":{"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"}},"id":"65dc33f7-e685-4547-8ad9-00adb6128a5c","type":"ResetTool"},{"attributes":{},"id":"af5a62f5-5dce-40ab-83f5-98c8168d3c17","type":"ToolEvents"},{"attributes":{"axis_label":null,"axis_line_color":{"value":null},"formatter":{"id":"1b07aaa7-c489-48ef-a925-25ccde528d01","type":"BasicTickFormatter"},"major_tick_line_color":{"value":null},"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"},"ticker":{"id":"a11d51e4-fceb-4086-b1f5-c2365aa288df","type":"BasicTicker"}},"id":"ca21369f-b2ec-488c-a095-ea5525b17cf4","type":"LinearAxis"},{"attributes":{"callback":null,"plot":{"id":"8e82780d-9360-400e-b2aa-cf2c6189b99e","subtype":"Figure","type":"Plot"},"point_policy":"follow_mouse","tooltips":"\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Key:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@key&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Task:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@function&lt;/span&gt;\n    &lt;/div&gt;\n    "},"id":"041d8ec8-8540-4805-acf1-bba13281c037","type":"HoverTool"},{"attributes":{"children":[{"id":"6af559f2-a6e1-4950-ba9f-048387d6128d","type":"Row"},{"id":"983713ad-1d5e-475e-a24f-1aa93d5f5b25","type":"Row"}]},"id":"0b6f3d60-74ca-4291-b454-f3d3261890a3","type":"Column"},{"attributes":{"children":[{"id":"b14067be-b8a7-4faf-b2e0-e02cb5b43b47","type":"Row"},{"id":"6f3a37d9-570b-4d53-a0ac-91d4b8b2ddb4","type":"Row"}]},"id":"b6063a66-85c9-4bd7-9282-b0e000ef6541","type":"Column"},{"attributes":{"below":[{"id":"4b4d55d0-2a83-4918-9e0f-fdd0829656f4","type":"LinearAxis"}],"left":[{"id":"7ea56366-c181-4b6a-ae75-dfa08a8d932c","type":"CategoricalAxis"}],"min_border_bottom":20,"min_border_left":75,"min_border_right":75,"plot_height":270,"plot_width":800,"renderers":[{"id":"4b4d55d0-2a83-4918-9e0f-fdd0829656f4","type":"LinearAxis"},{"id":"53fc6a4d-f3d4-47cd-8b6e-9237326bb9a1","type":"Grid"},{"id":"7ea56366-c181-4b6a-ae75-dfa08a8d932c","type":"CategoricalAxis"},{"id":"f3aab067-4e02-4e36-a794-939acb08e22a","type":"Grid"},{"id":"8226ac37-6730-4113-95d8-087e4250177b","type":"GlyphRenderer"}],"title":{"id":"102cd826-c761-4cad-b934-ec7a74da36d3","type":"Title"},"tool_events":{"id":"f4927e47-4580-4edc-af41-d45e4675b282","type":"ToolEvents"},"toolbar":{"id":"4faa29a2-312b-4b4f-bd25-b39674c2ecb7","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"02944fa3-4f9c-4714-8e33-b6ff018434ab","type":"Range1d"},"y_range":{"id":"f0a1a985-c54c-4973-8dbf-1dbf10d5a0d1","type":"FactorRange"}},"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"},{"attributes":{"line_color":{"value":"#41b6c4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"2a7fc8dd-c469-41a3-9f80-2813a7f73188","type":"Line"},{"attributes":{"data_source":{"id":"2783b34f-6d04-46e6-94f1-3e036183e7e4","type":"ColumnDataSource"},"glyph":{"id":"f7827b56-1485-4097-aed5-6ee89dcfd0b0","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"91727b18-11a8-4a67-be81-6685744a9770","type":"Line"},"selection_glyph":null},"id":"a5200809-0df0-44b0-a375-5bcbf8602156","type":"GlyphRenderer"},{"attributes":{"data_source":{"id":"5fb3f10c-1764-49b9-b484-c6e720610a47","type":"ColumnDataSource"},"glyph":{"id":"b47c2e0d-13bd-423b-9683-a972dc7f2263","type":"Rect"},"hover_glyph":null,"nonselection_glyph":{"id":"f0c3e8db-f6a1-40cd-b6df-7b5fd9b9b444","type":"Rect"},"selection_glyph":null},"id":"c048fb84-58fd-4b9f-8a98-f4d33df71226","type":"GlyphRenderer"},{"attributes":{"legends":[["% CPU",[{"id":"f4fb45fd-eade-4141-885a-2dbe73c616d0","type":"GlyphRenderer"}]],["Memory",[{"id":"37713557-8be0-42a5-bcde-0e4bf502a43b","type":"GlyphRenderer"}]]],"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}},"id":"207dc265-cbfe-4364-88fe-435408c7ca5b","type":"Legend"},{"attributes":{"sizing_mode":"scale_width","toolbar_location":"above","tools":[{"id":"0a74f544-8104-47f3-a6ef-4937b3c710c8","type":"HoverTool"},{"id":"32e95189-6811-45c2-9cf6-016582d9551e","type":"SaveTool"},{"id":"65dc33f7-e685-4547-8ad9-00adb6128a5c","type":"ResetTool"},{"id":"56f7b04b-c5aa-4008-a333-4d3758fd2783","type":"ResizeTool"},{"id":"8b2572ee-b9c8-4ebb-8036-b73cd522a2b3","type":"WheelZoomTool"},{"id":"1030fc5b-5334-4798-ad13-cef4ea311c63","type":"PanTool"},{"id":"316e7dc2-f17d-4e1d-8093-9f0f7fce884c","type":"SaveTool"},{"id":"b0065189-b477-4fd9-98aa-cc425f4f2cc5","type":"ResetTool"},{"id":"9e504ca5-f977-4231-969b-462c07ef05f1","type":"ResizeTool"},{"id":"4615facf-b22a-4fda-a91a-2548408ef904","type":"WheelZoomTool"},{"id":"b1a6eef8-8e90-41d2-aa0c-a2f14d3834da","type":"PanTool"}]},"id":"8261014c-a248-451b-93f4-5ea12860efa6","type":"ToolbarBox"},{"attributes":{},"id":"2d1b5cc7-68ca-421d-8449-bc3b25bc8019","type":"ToolEvents"},{"attributes":{"dimension":1,"grid_line_color":{"value":null},"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"},"ticker":{"id":"10d7adf1-ccb8-4fb0-a81c-73246bace5e0","type":"CategoricalTicker"}},"id":"f3aab067-4e02-4e36-a794-939acb08e22a","type":"Grid"},{"attributes":{"children":[{"id":"1d06070e-8bf4-4c3b-93e1-02f8ce2a61ed","type":"ToolbarBox"},{"id":"022db2d4-ddf6-408c-b942-9bdef1b126f6","type":"Column"}]},"id":"aaf4bccf-e8fb-4ca2-8c1d-de92fcb3f141","type":"Column"},{"attributes":{"axis_label":"% CPU","formatter":{"id":"dd2fa916-1063-418a-94f7-666cdfe684a2","type":"BasicTickFormatter"},"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"},"ticker":{"id":"94998d1c-c416-40d6-8527-52fa5fcdf861","type":"BasicTicker"}},"id":"5c6e2b8d-0f49-4dac-bab4-67d0da61d247","type":"LinearAxis"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"fb8ef419-e82b-43ec-b58b-991438980a7c","type":"HoverTool"},{"id":"c3300d7b-9212-418b-a13c-7ecae98f2e88","type":"SaveTool"},{"id":"56dc2269-df20-4d63-ab9f-689167a79056","type":"ResetTool"},{"id":"087346fc-3399-4c91-9a27-ef591ac70fd0","type":"ResizeTool"},{"id":"dea74d07-bbfd-4335-a2db-4c46258ecf81","type":"WheelZoomTool"},{"id":"fb460549-754a-4ec7-ad9a-b67d50398291","type":"PanTool"}]},"id":"24e17193-6ce2-4d18-93c7-0b76be90ce29","type":"Toolbar"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"e4feebc5-f88a-4ab0-a499-568dfedc9fd1","type":"SaveTool"},{"id":"1310395e-7669-468a-9cc6-f51bc5c3c378","type":"ResetTool"},{"id":"6c0dff3a-eb7e-49da-ad46-94a0e6f21074","type":"ResizeTool"},{"id":"06d587c2-a9bd-42ae-b9a1-7cfba80ee875","type":"WheelZoomTool"},{"id":"d9116fb3-6729-489e-b50c-cfb96a856e69","type":"PanTool"}]},"id":"366462a6-657c-42b4-a8f3-c5fc896ad8ac","type":"Toolbar"},{"attributes":{"grid_line_color":{"value":null},"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"},"ticker":{"id":"49c74b54-51fa-4156-acf1-bf95b5be42b7","type":"BasicTicker"}},"id":"6d246630-e9e5-4f95-ba01-b2aa1d0c19c9","type":"Grid"},{"attributes":{"callback":null,"end":7.773194074630737},"id":"a844ea01-11a1-4cd7-9d5b-c493fe8614a8","type":"Range1d"},{"attributes":{"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"}},"id":"ff25866a-4820-4956-9fcc-a2e60b204a8a","type":"ResetTool"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"height":{"units":"data","value":1},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"2a097976-767a-4ac2-bcd5-bf4114fad404","type":"Rect"},{"attributes":{"callback":null,"end":768.3000000000001},"id":"c77d78ee-23f5-4fac-94b5-a90b1917a53e","type":"Range1d"},{"attributes":{"plot":{"id":"a37b07e8-2022-4f5c-9b0f-d2b3034c0d69","subtype":"Figure","type":"Plot"}},"id":"56dc2269-df20-4d63-ab9f-689167a79056","type":"ResetTool"},{"attributes":{"plot":{"id":"15655bc2-3309-4778-a620-2f197e9aecd3","subtype":"Figure","type":"Plot"}},"id":"ac323c34-472a-4357-83bc-d81a550f1bb0","type":"ResetTool"},{"attributes":{"plot":{"id":"42ec0e19-cf89-48fe-8071-28849aaff4e3","subtype":"Figure","type":"Plot"}},"id":"ec5c57b2-4e32-4c11-aa6c-9a589ec243ec","type":"ResizeTool"},{"attributes":{"children":[{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"}]},"id":"3ddd4f36-b37f-4aa0-ab20-9f1bfc23685d","type":"Row"},{"attributes":{"callback":null,"factors":["0","1","2","3"]},"id":"f0a1a985-c54c-4973-8dbf-1dbf10d5a0d1","type":"FactorRange"},{"attributes":{"children":[{"id":"ce821ee1-ad0a-42c1-8558-bc9ef4937d2e","type":"ToolbarBox"},{"id":"8939d3ae-c51a-438d-87eb-21ba7679ac6d","type":"Column"}]},"id":"0df11a2b-35d8-443b-99c4-4f7d7f670e39","type":"Column"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"height":{"units":"data","value":1},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"665a67da-06fa-45d0-b1ee-617f262d7ed9","type":"Rect"},{"attributes":{},"id":"cabb9d7d-f4da-48b0-a2af-7e884f0044fa","type":"ToolEvents"},{"attributes":{"children":[{"id":"8261014c-a248-451b-93f4-5ea12860efa6","type":"ToolbarBox"},{"id":"b6063a66-85c9-4bd7-9282-b0e000ef6541","type":"Column"}]},"id":"675c4a99-2c4f-423a-90f7-4246f3bfc460","type":"Column"},{"attributes":{"axis_label":"Time (s)","formatter":{"id":"5f977cad-28c5-428d-947a-84d6c9e7dfc4","type":"BasicTickFormatter"},"plot":{"id":"b62e4eae-f0cc-44aa-9e52-9e40645db00e","subtype":"Figure","type":"Plot"},"ticker":{"id":"209af650-221e-4300-b7fe-9071c41333b6","type":"BasicTicker"}},"id":"78c3d915-16e6-4937-bb1e-9799eaec2d06","type":"LinearAxis"},{"attributes":{},"id":"9dbba22c-beab-4b7c-a94d-455ac5758fc3","type":"CategoricalTickFormatter"},{"attributes":{"callback":null,"factors":["0","1","2","3"]},"id":"c194a858-15ff-4a14-b39f-4a594d57cea3","type":"FactorRange"},{"attributes":{"fill_color":{"field":"color"},"height":{"units":"data","value":1},"line_color":{"value":"gray"},"width":{"field":"width","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"b47c2e0d-13bd-423b-9683-a972dc7f2263","type":"Rect"},{"attributes":{"plot":null,"text":"Profile Results"},"id":"23459dc7-ce97-402c-9ec4-d1bdef08a601","type":"Title"},{"attributes":{},"id":"974d387c-d416-442a-8e80-b80bafd56fdd","type":"BasicTicker"},{"attributes":{"dimensions":["width"],"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"}},"id":"8b2572ee-b9c8-4ebb-8036-b73cd522a2b3","type":"WheelZoomTool"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[0.0,0.5052869319915771,1.0065319538116455,1.506781816482544,2.0076358318328857,2.508819818496704,3.0100879669189453,3.511201858520508,4.0118818283081055,4.5123679637908936,5.012655019760132,5.5138609409332275,6.0141918659210205,6.514534950256348,7.015532970428467,7.51566481590271],"y":[0.0,10.0,330.29999999999995,768.3000000000001,528.1,371.7,734.3,323.2,677.8,616.5,602.6999999999999,736.5,304.6,730.3000000000001,693.4000000000001,560.1]}},"id":"a5a8aa09-244f-4651-a2aa-d7571d37199b","type":"ColumnDataSource"},{"attributes":{"callback":null,"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"},"point_policy":"follow_mouse","tooltips":"\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Key:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@key&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;span style=\"font-size: 14px; font-weight: bold;\"&gt;Task:&lt;/span&gt;&amp;nbsp;\n        &lt;span style=\"font-size: 10px; font-family: Monaco, monospace;\"&gt;@function&lt;/span&gt;\n    &lt;/div&gt;\n    "},"id":"0a74f544-8104-47f3-a6ef-4937b3c710c8","type":"HoverTool"},{"attributes":{"grid_line_color":{"value":null},"plot":{"id":"4f70ce39-51f3-42d1-99bd-cca03f2a5015","subtype":"Figure","type":"Plot"},"ticker":{"id":"05f6a2b9-79e9-4d30-89da-90d393dfd373","type":"BasicTicker"}},"id":"53fc6a4d-f3d4-47cd-8b6e-9237326bb9a1","type":"Grid"},{"attributes":{"callback":null,"column_names":["function","color","width","key","y","x"],"data":{"color":["#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#ffffd9","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#081d58","#081d58","#7fcdbb","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#41b6c4","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#7fcdbb","#081d58","#c7e9b4","#c7e9b4","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#edf8b1","#1d91c0","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#edf8b1","#1d91c0","#7fcdbb","#c7e9b4","#1d91c0","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#7fcdbb","#1d91c0","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#7fcdbb","#253494","#225ea8","#081d58","#edf8b1","#225ea8","#081d58","#edf8b1","#1d91c0","#081d58","#7fcdbb","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#081d58","#225ea8","#1d91c0","#c7e9b4","#253494","#081d58","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#7fcdbb","#081d58","#081d58","#41b6c4","#edf8b1","#1d91c0","#081d58","#081d58","#1d91c0","#c7e9b4","#7fcdbb","#253494","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#7fcdbb","#081d58","#1d91c0","#c7e9b4","#c7e9b4","#7fcdbb","#253494","#081d58","#7fcdbb","#253494","#225ea8","#081d58","#7fcdbb","#edf8b1","#225ea8","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#253494","#7fcdbb","#c7e9b4","#7fcdbb","#253494","#225ea8","#7fcdbb","#edf8b1","#225ea8","#081d58","#081d58","#edf8b1","#7fcdbb","#081d58","#1d91c0","#081d58","#1d91c0","#c7e9b4","#ffffd9","#c7e9b4","#7fcdbb"],"function":["_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","list(zip([*, *], [_finalize(...), _finalize(...)]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_finalize(concrete([_, _, _, ...]))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_finalize(concrete([_, _, _, ...]))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_partial_fit(_, _, _, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","mat_split(_, *, *, *)","_partial_fit(*, _, _, [*, *], *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_score(_, _, _, *)","list(concat(reify(imap(*, _))))","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","mat_split(_, *, *, *)","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","merge_estimators([_, _, _, ...])","_transform(*, bag_split(...))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))","_fit(_, _, _, *)","reify(imap(*, reify(imap(*, *))))","_transform(*, bag_split(...))","list(concat(reify(imap(*, _))))","reify(imap(*, reify(imap(*, *))))","mat_split(_, *, *, *)","mat_split(_, *, *, *)","list(concat(reify(imap(*, _))))","_transform(*, bag_split(...))","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","mat_split(_, *, *, *)","_partial_fit(_, _, _, *, *)","_vstack(reify(imap(*, _)))","list(zip([*, *], [_finalize(...), _finalize(...)]))","_vstack(reify(imap(*, _)))","_transform(*, bag_split(...))"],"key":["('fit-b66cedc053e99c6e95f363215e7a7334', 9)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 14)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 9)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 13)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 19)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 11)","('transform-91987e004b5eee33be4666084d289788', 1)","('fit-b66cedc053e99c6e95f363215e7a7334', 19)","pipeline-d96c68632b9021f27630c84c77037e1e","('transform-91987e004b5eee33be4666084d289788', 14)","('fit-b66cedc053e99c6e95f363215e7a7334', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 3)","('transform-3701820be5a01bea931ae6746fcf45de', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 8)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 13)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 1)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 14)","('transform-91987e004b5eee33be4666084d289788', 4)","('fit-b66cedc053e99c6e95f363215e7a7334', 16)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 17)","('transform-3701820be5a01bea931ae6746fcf45de', 3)","('fit-b66cedc053e99c6e95f363215e7a7334', 3)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 0)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 6)","('transform-3701820be5a01bea931ae6746fcf45de', 12)","('concat-663ec7c17b87051c17363e0138c027c9', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 19)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 11)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 1)","score-253ce92f4793fb8dc8462d77f26b25a1","('partial_fit-c38c22080c247611c3eef513f23c1800', 7)","('partial_fit-c38c22080c247611c3eef513f23c1800', 8)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 4)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 17)","('transform-91987e004b5eee33be4666084d289788', 7)","('fit-b66cedc053e99c6e95f363215e7a7334', 13)","('transform-91987e004b5eee33be4666084d289788', 0)","('transform-3701820be5a01bea931ae6746fcf45de', 6)","('fit-b66cedc053e99c6e95f363215e7a7334', 0)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 13)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 6)","('concat-663ec7c17b87051c17363e0138c027c9', 20)","('partial_fit-c38c22080c247611c3eef513f23c1800', 2)","('transform-3701820be5a01bea931ae6746fcf45de', 1)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 20)","abda7a26585388f99acd646b1e447d0e","('transform-91987e004b5eee33be4666084d289788', 10)","('fit-b66cedc053e99c6e95f363215e7a7334', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 5)","('concat-663ec7c17b87051c17363e0138c027c9', 15)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 10)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 12)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 2)","('concat-663ec7c17b87051c17363e0138c027c9', 17)","('partial_fit-c38c22080c247611c3eef513f23c1800', 1)","90211eab9b932bd05043ea781b69898c","('partial_fit-c38c22080c247611c3eef513f23c1800', 18)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 10)","('transform-3701820be5a01bea931ae6746fcf45de', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 21)","('transform-91987e004b5eee33be4666084d289788', 13)","('fit-b66cedc053e99c6e95f363215e7a7334', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 8)","('concat-663ec7c17b87051c17363e0138c027c9', 8)","('transform-91987e004b5eee33be4666084d289788', 6)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 18)","('partial_fit-c38c22080c247611c3eef513f23c1800', 12)","('transform-91987e004b5eee33be4666084d289788', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 17)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 13)","('transform-3701820be5a01bea931ae6746fcf45de', 17)","('fit-b66cedc053e99c6e95f363215e7a7334', 17)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 2)","('fit-b66cedc053e99c6e95f363215e7a7334', 4)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 1)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 15)","('concat-663ec7c17b87051c17363e0138c027c9', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 10)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 2)","('transform-91987e004b5eee33be4666084d289788', 2)","('partial_fit-c38c22080c247611c3eef513f23c1800', 6)","('partial_fit-c38c22080c247611c3eef513f23c1800', 11)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 3)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 16)","('transform-3701820be5a01bea931ae6746fcf45de', 20)","('fit-b66cedc053e99c6e95f363215e7a7334', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 19)","('transform-3701820be5a01bea931ae6746fcf45de', 19)","('transform-91987e004b5eee33be4666084d289788', 19)","('fit-b66cedc053e99c6e95f363215e7a7334', 1)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 14)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 0)","('concat-663ec7c17b87051c17363e0138c027c9', 6)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 7)","('concat-663ec7c17b87051c17363e0138c027c9', 21)","('partial_fit-c38c22080c247611c3eef513f23c1800', 5)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 18)","('transform-3701820be5a01bea931ae6746fcf45de', 7)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 6)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 19)","('transform-91987e004b5eee33be4666084d289788', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 11)","('transform-3701820be5a01bea931ae6746fcf45de', 4)","('concat-663ec7c17b87051c17363e0138c027c9', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 11)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 9)","('concat-663ec7c17b87051c17363e0138c027c9', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 4)","('partial_fit-c38c22080c247611c3eef513f23c1800', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 9)","('fit-b66cedc053e99c6e95f363215e7a7334', 21)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 20)","('transform-91987e004b5eee33be4666084d289788', 12)","('fit-b66cedc053e99c6e95f363215e7a7334', 8)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 5)","('transform-3701820be5a01bea931ae6746fcf45de', 11)","('concat-663ec7c17b87051c17363e0138c027c9', 9)","('transform-91987e004b5eee33be4666084d289788', 3)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 14)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 14)","score-63ed8c68941f0b652aa11328af0b65dd","('concat-663ec7c17b87051c17363e0138c027c9', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 15)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 20)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 9)","('partial_fit-c38c22080c247611c3eef513f23c1800', 16)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 12)","('transform-3701820be5a01bea931ae6746fcf45de', 16)","('fit-b66cedc053e99c6e95f363215e7a7334', 18)","('transform-91987e004b5eee33be4666084d289788', 15)","('fit-b66cedc053e99c6e95f363215e7a7334', 5)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 2)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 4)","('transform-3701820be5a01bea931ae6746fcf45de', 14)","('concat-663ec7c17b87051c17363e0138c027c9', 10)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 21)","('transform-91987e004b5eee33be4666084d289788', 16)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 3)","('partial_fit-c38c22080c247611c3eef513f23c1800', 10)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 2)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 15)","('transform-91987e004b5eee33be4666084d289788', 5)","('fit-b66cedc053e99c6e95f363215e7a7334', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 18)","('transform-91987e004b5eee33be4666084d289788', 18)","('fit-b66cedc053e99c6e95f363215e7a7334', 2)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 15)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 7)","('transform-3701820be5a01bea931ae6746fcf45de', 13)","('concat-663ec7c17b87051c17363e0138c027c9', 7)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 18)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 0)","('partial_fit-c38c22080c247611c3eef513f23c1800', 4)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 19)","('partial_fit-c38c22080c247611c3eef513f23c1800', 9)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 5)","fit-b66cedc053e99c6e95f363215e7a7334","('transform-3701820be5a01bea931ae6746fcf45de', 21)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 18)","('transform-91987e004b5eee33be4666084d289788', 8)","('fit-b66cedc053e99c6e95f363215e7a7334', 12)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 8)","('transform-91987e004b5eee33be4666084d289788', 21)","('concat-663ec7c17b87051c17363e0138c027c9', 13)","('map-remove_empty_topics-331fbdc5641b7a718b9528c95fefa9a0', 12)","('random-split-test-56d31f9b6c28004463382a032ad352b5', 2)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 10)","('concat-663ec7c17b87051c17363e0138c027c9', 0)","('transform-91987e004b5eee33be4666084d289788', 17)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 5)","('partial_fit-c38c22080c247611c3eef513f23c1800', 3)","('random-split-train-56d31f9b6c28004463382a032ad352b5', 16)","('partial_fit-c38c22080c247611c3eef513f23c1800', 20)","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 8)","pipeline-8a4823395f69e56e2cb8a1cce61614b1","('matrix-from-bag-6b02d07fe70b384d6a5edfe5d644481a', 21)","('transform-91987e004b5eee33be4666084d289788', 11)"],"width":[0.06586098670959473,0.6457560062408447,0.04258108139038086,0.04684591293334961,0.6643929481506348,0.0018749237060546875,0.004625797271728516,0.07071113586425781,0.025445938110351562,0.0028531551361083984,0.0242919921875,0.06588196754455566,0.2476968765258789,0.07451295852661133,0.2138688564300537,0.1300959587097168,0.0819091796875,0.5953431129455566,0.04957008361816406,0.12508916854858398,0.003350973129272461,0.003751993179321289,0.0924229621887207,0.029755115509033203,0.16345882415771484,0.04338383674621582,0.23795700073242188,0.08170008659362793,0.02003192901611328,0.059110164642333984,0.24330687522888184,0.5237650871276855,0.0024721622467041016,0.07349610328674316,0.07262206077575684,0.7556469440460205,0.005363941192626953,0.0124969482421875,0.23180007934570312,0.02680206298828125,0.02742314338684082,0.21030187606811523,0.12379288673400879,0.11370015144348145,0.06509518623352051,0.2521989345550537,0.06660294532775879,0.07633304595947266,0.7288670539855957,0.01615118980407715,0.003709077835083008,0.06541800498962402,0.8098061084747314,0.01604294776916504,0.06065511703491211,0.0601809024810791,0.08130097389221191,0.019283056259155273,0.1066892147064209,0.06401610374450684,0.04907107353210449,0.1592121124267578,0.10581588745117188,0.6555349826812744,0.0853719711303711,0.0902719497680664,0.6216058731079102,0.0019168853759765625,0.08568382263183594,0.08466506004333496,0.15590596199035645,0.05888509750366211,0.005702972412109375,0.033917903900146484,0.06485390663146973,0.05897188186645508,0.08901000022888184,0.0025861263275146484,0.09967684745788574,0.07784390449523926,0.7245190143585205,0.06766796112060547,0.1606597900390625,0.2092750072479248,0.012597799301147461,0.002218961715698242,0.2374742031097412,0.038105010986328125,0.09521698951721191,0.11808013916015625,0.029591083526611328,0.07445287704467773,0.1004478931427002,0.08746504783630371,0.002215862274169922,0.04172396659851074,0.09367799758911133,0.4731299877166748,0.0015881061553955078,0.07727622985839844,0.14694786071777344,0.7179610729217529,0.0021829605102539062,0.014772891998291016,0.13095903396606445,0.02698802947998047,0.02161383628845215,0.08034682273864746,0.059591054916381836,0.0374760627746582,0.07213306427001953,0.06326103210449219,0.05134010314941406,0.2137470245361328,0.20203399658203125,0.6923129558563232,0.0029180049896240234,0.0710291862487793,0.805718183517456,0.011174917221069336,0.06751608848571777,0.034657955169677734,0.003068208694458008,0.0549159049987793,0.16846513748168945,0.13571906089782715,0.23821115493774414,0.10757899284362793,0.07146906852722168,0.08735895156860352,0.5671989917755127,0.03183698654174805,0.0029900074005126953,0.06832599639892578,0.011420965194702148,0.05526995658874512,0.03244185447692871,0.08154010772705078,0.04314613342285156,0.0028870105743408203,0.21623516082763672,0.11446499824523926,0.7872660160064697,0.0415959358215332,0.125108003616333,0.17416095733642578,0.002110004425048828,0.0026481151580810547,0.03248000144958496,0.059504032135009766,0.035080909729003906,0.0026199817657470703,0.0018470287322998047,0.02415299415588379,0.08168506622314453,0.09329485893249512,0.07958602905273438,0.21392393112182617,0.09049797058105469,0.5561599731445312,0.0017309188842773438,0.035423994064331055,0.09253191947937012,0.4566020965576172,0.26935601234436035,0.003332853317260742,0.026254892349243164,0.10485410690307617,0.10407114028930664,0.14144110679626465,0.0792539119720459,0.0031042098999023438,0.23423194885253906,0.2550480365753174,0.600883960723877,0.002858877182006836,0.050050973892211914,0.1331310272216797,0.6163759231567383,0.01810002326965332,0.035672903060913086,0.06244087219238281,0.03072500228881836,0.054572105407714844,0.37024998664855957,0.03629589080810547,0.09598612785339355,0.1671440601348877,0.10978102684020996,0.7178628444671631,0.07458209991455078,0.04324197769165039,0.7996950149536133,0.01361989974975586,0.0019741058349609375,0.07398605346679688,0.28394317626953125,0.001970052719116211,0.07586097717285156,0.0031180381774902344,0.02670884132385254,0.07708907127380371,0.03445792198181152,0.052201032638549805,0.12042808532714844],"x":[4.090320348739624,1.648893117904663,3.4619815349578857,4.667968034744263,2.8307526111602783,4.537511587142944,5.077923059463501,5.653439521789551,4.923432111740112,6.925442457199097,6.64546799659729,3.574086904525757,0.999983549118042,6.298099517822266,7.45468544960022,4.756816148757935,2.5808045864105225,0.30690860748291016,4.148086071014404,3.357834577560425,3.6068685054779053,4.579475164413452,1.2186546325683594,4.895779609680176,0.558983564376831,4.4328391551971436,2.483785629272461,6.088378190994263,5.992499113082886,0.7091870307922363,0.9688894748687744,0.2618825435638428,2.157940149307251,4.670245885848999,2.3284060955047607,5.5493714809417725,3.611297130584717,0.6475095748901367,7.439609050750732,2.7145791053771973,3.591430425643921,2.0343730449676514,5.914428472518921,2.2025129795074463,4.61195969581604,0.9795176982879639,2.4651834964752197,1.1524765491485596,4.0719006061553955,0.6715214252471924,3.6089394092559814,0.843339204788208,5.147461175918579,2.1486446857452393,7.1381494998931885,1.2503764629364014,1.1317293643951416,5.986012697219849,2.2725794315338135,7.1079161167144775,7.236618757247925,3.509695053100586,3.642275094985962,1.684633493423462,2.2490460872650146,4.819885969161987,3.0263431072235107,4.5823915004730225,3.328597068786621,0.6052963733673096,6.207232236862183,1.1907966136932373,7.14648962020874,6.6163010597229,3.403926134109497,6.0320351123809814,7.315207242965698,6.928207159042358,4.5295164585113525,2.376138925552368,1.566617727279663,3.559080123901367,3.3301360607147217,2.435140371322632,5.085486173629761,4.535426378250122,5.8508899211883545,4.8614115715026855,7.216456651687622,0.583198070526123,6.5844855308532715,4.49699854850769,6.389211893081665,6.618567705154419,5.6169350147247314,0.674659013748169,2.6686511039733887,0.24029803276062012,2.2184131145477295,4.932769060134888,2.1260740756988525,6.716585397720337,3.4395556449890137,0.8517866134643555,0.7131874561309814,2.687230110168457,4.046197175979614,0.7358014583587646,5.582516431808472,7.1932830810546875,4.858009576797485,6.232504606246948,6.021356105804443,6.093942642211914,1.2249290943145752,4.064636468887329,0.6619160175323486,2.294928550720215,5.449322938919067,2.3315746784210205,6.8737571239471436,2.656337022781372,6.301667928695679,2.1787760257720947,2.0563535690307617,6.129469633102417,3.858684539794922,3.6646387577056885,2.4512417316436768,4.582173585891724,3.011631727218628,0.7946405410766602,3.24638295173645,0.6388039588928223,2.14557147026062,1.1332981586456299,7.307427167892456,3.204054117202759,7.004106044769287,7.142140626907349,4.734147548675537,3.6501834392547607,1.6589138507843018,3.504122018814087,3.6765801906585693,0.7601034641265869,4.458678960800171,4.456248998641968,7.756953954696655,5.957252025604248,5.09783148765564,7.141294240951538,3.2488505840301514,5.9703686237335205,4.536349534988403,6.31084942817688,6.343047142028809,4.972130060195923,2.386583089828491,0.2848329544067383,2.1600894927978516,4.724769830703735,3.3837549686431885,6.611196994781494,5.823562860488892,0.777700662612915,4.022213697433472,0.7915370464324951,5.023497581481934,2.2705767154693604,5.131868124008179,6.336971044540405,6.086857080459595,0.9867370128631592,4.473842144012451,2.4889466762542725,4.608405351638794,2.079023599624634,5.4236249923706055,0.6513330936431885,2.6211116313934326,6.229077577590942,3.9936695098876953,2.1882801055908203,7.54526686668396,6.931612014770508,6.252013921737671,3.494093179702759,4.991097688674927,2.8493664264678955,6.9448699951171875,4.458007097244263,4.095598459243774,1.197504997253418,3.4374470710754395,0.8163859844207764,6.427215576171875,2.2166011333465576,1.3184475898742676,5.614207983016968,7.277772665023804,3.2471554279327393,7.748010873794556,6.897837400436401,3.48088002204895],"y":[3,1,1,1,3,4,1,2,4,4,2,4,1,2,1,1,2,4,3,4,3,2,2,4,3,4,4,4,2,4,2,2,1,2,4,3,3,3,4,4,3,4,4,2,1,3,3,4,1,2,4,1,2,1,1,3,2,4,1,2,2,2,2,2,4,3,2,2,1,1,4,3,2,2,1,2,3,4,1,1,4,1,3,2,3,4,1,4,4,2,2,4,2,4,2,3,2,3,1,1,3,3,1,4,1,4,3,3,2,3,1,3,4,3,1,4,2,2,4,1,2,4,1,4,1,2,3,4,1,4,4,1,3,4,4,3,2,3,4,3,4,1,3,1,3,2,4,4,4,3,1,4,3,2,2,3,1,3,3,1,1,2,2,1,2,3,3,4,1,3,3,2,1,4,3,1,2,2,1,2,4,2,3,1,2,2,1,3,4,1,1,1,2,4,1,3,4,1,2,2,1,1,3,4,4]}},"id":"c4dbad8e-f958-46ff-b631-1d2ab1c130e0","type":"ColumnDataSource"},{"attributes":{"line_color":{"value":"#41b6c4"},"line_width":{"value":4},"x":{"field":"x"},"y":{"field":"y"}},"id":"9c46ce44-025a-41c8-9b0d-9983f0e70288","type":"Line"}],"root_ids":["aaf4bccf-e8fb-4ca2-8c1d-de92fcb3f141","1c687d85-0b21-4a09-afff-020ba88a9d4f","0df11a2b-35d8-443b-99c4-4f7d7f670e39","675c4a99-2c4f-423a-90f7-4246f3bfc460"]},"title":"Bokeh Application","version":"0.12.0"}};
    var render_items = [{"docid":"f2e1dae7-cba6-43f7-9512-bc078f836ed4","elementid":"908f8375-28cf-4e21-a6e3-f4d38a24b8ab","modelid":"675c4a99-2c4f-423a-90f7-4246f3bfc460"}];

    Bokeh.embed.embed_items(docs_json, render_items);
});
&lt;/script&gt;

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;
&lt;p&gt;Looking at the above profiling plot, we can observe a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I'm able to achieve between 400 - 800% cpu usage. My machine has 4 real
  cores (8 virtual cores) so this is pretty optimal. Since we're only using
  4 processes, the spikes to 800% are due to internal threading in certain
  scikit-learn operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The dark blue rectangles are the disk reads and initial preprocessing steps.
  These are by far the most expensive parts of the computation. The overall
  profiling plot shows a nice structure of alternating reads and computations,
  which matches our expectations of streaming the data through memory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What worked well&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The parallelization patterns are intuitive to use, and work with any
  estimator that matches the assumptions made. This means we don't need to
  create a new class for each scikit-learn estimator (there are a lot of
  them!).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because each estimator is lazy, we can fit several different estimators on
  the same data, but reuse intermediates results from each. This is more
  efficient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since the wrapper classes implement the common &lt;code&gt;fit&lt;/code&gt;, &lt;code&gt;predict&lt;/code&gt;, &lt;code&gt;score&lt;/code&gt;
  interface, they can be dropped into things like &lt;code&gt;GridSearchCV&lt;/code&gt;, and
  everything should &lt;em&gt;just work&lt;/em&gt;. This means we can do grid search and cross
  validation on out-of-core datasets (something we'll look at more in depth in
  the next post).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What could be better&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It's not clear that averaging coefficients is the best way for most
  estimators. In particular, I'm not sure what the behavior should be when all
  classes aren't present in all partitions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The approaches here are naive. This isn't necessarily a bad thing as it
  makes the library very easy to maintain. However, there are almost certainly
  more efficient/correct methods that could be used.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Help&lt;/h2&gt;
&lt;p&gt;I am not a machine learning expert. Is any of this useful? Do you have
suggestions for improvements (or better yet PRs for improvements :))? Please
feel free to reach out in the comments below, or &lt;a href="https://github.com/dask/dask-learn"&gt;on
github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This work is supported by &lt;a href="http://continuum.io/"&gt;Continuum Analytics&lt;/a&gt; and the
&lt;a href="http://www.darpa.mil/program/XDATA"&gt;XDATA&lt;/a&gt; program as part of the &lt;a href="http://blaze.pydata.org/"&gt;Blaze
Project&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="dask"></category></entry><entry><title>Dask and Scikit-Learn -- Model Parallelism</title><link href="/dask-sklearn-part-1.html" rel="alternate"></link><published>2016-07-11T20:00:00-05:00</published><author><name>Jim Crist</name></author><id>tag:,2016-07-11:dask-sklearn-part-1.html</id><summary type="html">&lt;p&gt;This is the first of a series of posts discussing some recent experiments
combining &lt;a href="http://dask.pydata.org/en/latest/"&gt;dask&lt;/a&gt; and
&lt;a href="http://scikit-learn.org/stable/"&gt;scikit-learn&lt;/a&gt;. A small (and extremely alpha)
library has been built up from these experiments, and can be found
&lt;a href="https://github.com/dask/dask-learn"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before we start, I would like to make the following caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I am not a machine learning expert. Do not consider this a guide on how to do
  machine learning, the usage of scikit-learn below is probably naive.&lt;/li&gt;
&lt;li&gt;All of the code discussed here is in flux, and shouldn't be considered stable
  or robust. That said, if you know something about machine learning and want
  to help out, I'd be more than happy to receive issues or pull requests :).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are several ways of parallelizing algorithms in machine learning. Some
algorithms can be made to be data-parallel (either across features or across
samples). In this post we'll look instead at model-parallelism (use same data
across different models), and dive into a daskified implementation of
&lt;a href="http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.GridSearchCV.html"&gt;GridSearchCV&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What is grid search?&lt;/h2&gt;
&lt;p&gt;Many machine learning algorithms have &lt;em&gt;hyperparameters&lt;/em&gt; which can be tuned to
improve the performance of the resulting estimator. A &lt;a href="https://en.wikipedia.org/wiki/Hyperparameter_optimization#Grid_search"&gt;grid
search&lt;/a&gt;
is one way of optimizing these parameters &amp;mdash; it works by doing a parameter
sweep across a cartesian product of a subset of these parameters (the "grid"),
and then choosing the best resulting estimator. Since this is fitting many
independent estimators across the same set of data, it can be fairly easily
parallelized.&lt;/p&gt;
&lt;h2&gt;Grid search with scikit-learn&lt;/h2&gt;
&lt;p&gt;In scikit-learn, a grid search is performed using the &lt;code&gt;GridSearchCV&lt;/code&gt; class, and
can (optionally) be automatically parallelized using
&lt;a href="https://pythonhosted.org/joblib/index.html"&gt;joblib&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is best illustrated with an example. First we'll make an example dataset
for doing classification against:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;make_classification&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_classification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_samples&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="n"&gt;n_features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="n"&gt;n_classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="n"&gt;n_redundant&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To solve this classification problem, we'll create a pipeline of a &lt;code&gt;PCA&lt;/code&gt; and a
&lt;code&gt;LogisticRegression&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;linear_model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;decomposition&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;

&lt;span class="n"&gt;logistic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;linear_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LogisticRegression&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pca&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;decomposition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PCA&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pca&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pca&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;logistic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logistic&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both of these classes take several hyperparameters, we'll do a grid-search
across only a few of them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Parameters of pipelines can be set using ‘__’ separated parameter names:&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pca__n_components&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;logistic__C&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1e-4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1e4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;logistic__penalty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;l1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;l2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, we can create an instance of &lt;code&gt;GridSearchCV&lt;/code&gt;, and perform the grid
search. The parameter &lt;code&gt;n_jobs=-1&lt;/code&gt; tells joblib to use as many processes as I
have cores (8).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.grid_search&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;

&lt;span class="n"&gt;estimator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CPU times: user 5.3 s, sys: 243 ms, total: 5.54 s
Wall time: 21.6 s
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;What happened here was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An estimator was created for each parameter combination and test-train set
(scikit-learn's grid search also does cross validation across 3-folds by
default).&lt;/li&gt;
&lt;li&gt;Each estimator was fit on its corresponding set of training data&lt;/li&gt;
&lt;li&gt;Each estimator was then scored on its corresponding set of testing data&lt;/li&gt;
&lt;li&gt;The best set of parameters was chosen based on these scores&lt;/li&gt;
&lt;li&gt;A new estimator was then fit on &lt;em&gt;all&lt;/em&gt; of the data, using the best parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The corresponding best score, parameters, and estimator can all be found as
attributes on the resulting object:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.89290000000000003
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{&amp;#39;logistic__C&amp;#39;: 0.0001, &amp;#39;logistic__penalty&amp;#39;: &amp;#39;l2&amp;#39;, &amp;#39;pca__n_components&amp;#39;: 50}
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_estimator_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Pipeline(steps=[(&amp;#39;pca&amp;#39;, PCA(copy=True, n_components=50, whiten=False)), (&amp;#39;logistic&amp;#39;, LogisticRegression(C=0.0001, class_weight=None, dual=False,
        fit_intercept=True, intercept_scaling=1, max_iter=100,
        multi_class=&amp;#39;ovr&amp;#39;, n_jobs=1, penalty=&amp;#39;l2&amp;#39;, random_state=None,
        solver=&amp;#39;liblinear&amp;#39;, tol=0.0001, verbose=0, warm_start=False))])&amp;lt;div class=md_output&amp;gt;

    {&amp;#39;logistic__C&amp;#39;: 0.0001, &amp;#39;logistic__penalty&amp;#39;: &amp;#39;l2&amp;#39;, &amp;#39;pca__n_components&amp;#39;: 50}
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;h2&gt;Grid search with dask-learn&lt;/h2&gt;
&lt;p&gt;Here we'll repeat the same fit using dask-learn. I've tried to match the
scikit-learn interface as much as possible, although not everything is
implemented. Here the only thing that really changes is the &lt;code&gt;GridSearchCV&lt;/code&gt;
import. We don't need the &lt;code&gt;n_jobs&lt;/code&gt; keyword, as this will be parallelized across
all cores by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dklearn.grid_search&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;DaskGridSearchCV&lt;/span&gt;

&lt;span class="n"&gt;destimator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DaskGridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CPU times: user 16.3 s, sys: 1.89 s, total: 18.2 s
Wall time: 5.63 s
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;As before, the best score, parameters, and estimator can all be found as
attributes on the object. Here we'll just show that they're equivalent:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;True
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;True
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_estimator_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Pipeline(steps=[(&amp;#39;pca&amp;#39;, PCA(copy=True, n_components=50, whiten=False)), (&amp;#39;logistic&amp;#39;, LogisticRegression(C=0.0001, class_weight=None, dual=False,
        fit_intercept=True, intercept_scaling=1, max_iter=100,
        multi_class=&amp;#39;ovr&amp;#39;, n_jobs=1, penalty=&amp;#39;l2&amp;#39;, random_state=None,
        solver=&amp;#39;liblinear&amp;#39;, tol=0.0001, verbose=0, warm_start=False))])&amp;lt;div class=md_output&amp;gt;

    {&amp;#39;logistic__C&amp;#39;: 0.0001, &amp;#39;logistic__penalty&amp;#39;: &amp;#39;l2&amp;#39;, &amp;#39;pca__n_components&amp;#39;: 50}
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;h2&gt;Why is the dask version faster?&lt;/h2&gt;
&lt;p&gt;If you look at the times above, you'll note that the dask version was &lt;code&gt;~4X&lt;/code&gt;
faster than the scikit-learn version. This is not because we have optimized any
of the pieces of the &lt;code&gt;Pipeline&lt;/code&gt;, or that there's a significant amount of
overhead to &lt;code&gt;joblib&lt;/code&gt; (on the contrary, joblib does some pretty amazing things,
and I had to construct a contrived example to beat it this badly). The reason
is simply that the dask version is doing less work.&lt;/p&gt;
&lt;p&gt;This maybe best explained in pseudocode. The scikit-learn version of the above
(in serial) looks something like (pseudocode):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pca__n_components&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;logistic__C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;penalty&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;logistic__penalty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="c1"&gt;# Create and fit a PCA on the input data&lt;/span&gt;
                &lt;span class="n"&gt;pca&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PCA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_components&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Transform both the train and test data&lt;/span&gt;
                &lt;span class="n"&gt;X_train2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pca&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;X_test2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pca&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Create and fit a LogisticRegression on the transformed data&lt;/span&gt;
                &lt;span class="n"&gt;logistic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LogisticRegression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;penalty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;penalty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;logistic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Score the total pipeline&lt;/span&gt;
                &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logistic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Save the score and parameters&lt;/span&gt;
                &lt;span class="n"&gt;scores_and_params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Find the best set of parameters (for some definition of best)&lt;/span&gt;
&lt;span class="n"&gt;find_best_parameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is looping through a cartesian product of the cross-validation sets and
all the parameter combinations, and then creating and fitting a new estimator
for each combination. While embarassingly parallel, this can also result in
repeated work, as earlier stages in the pipeline are refit multiple times on
the same parameter + data combinations.&lt;/p&gt;
&lt;p&gt;In contrast, the dask version hashes all inputs (forming a sort of &lt;a href="https://en.wikipedia.org/wiki/Merkle_tree"&gt;Merkle
DAG&lt;/a&gt;), resulting in the intermediate
results being shared. Keeping with the pseudocode above, the dask version might
look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pca__n_components&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="c1"&gt;# Create and fit a PCA on the input data&lt;/span&gt;
        &lt;span class="n"&gt;pca&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PCA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_components&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Transform both the train and test data&lt;/span&gt;
        &lt;span class="n"&gt;X_train2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pca&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;X_test2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pca&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;logistic__C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;penalty&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;logistic__penalty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="c1"&gt;# Create and fit a LogisticRegression on the transformed data&lt;/span&gt;
                &lt;span class="n"&gt;logistic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LogisticRegression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;penalty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;penalty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;logistic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Score the total pipeline&lt;/span&gt;
                &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logistic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Save the score and parameters&lt;/span&gt;
                &lt;span class="n"&gt;scores_and_params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;penalty&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Find the best set of parameters (for some definition of best)&lt;/span&gt;
&lt;span class="n"&gt;find_best_parameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This can still be parallelized, but in a less straightforward manner - the
graph is a bit more complicated than just a simple map-reduce pattern.
Thankfully the &lt;a href="http://dask.pydata.org/en/latest/scheduler-overview.html"&gt;dask
schedulers&lt;/a&gt; are well
equipped to handle arbitrary graph topologies. Below is a GIF showing how the
dask scheduler (the threaded scheduler specifically) executed the grid search
performed above. Each rectangle represents data, and each circle represents a
task. Each is categorized by color:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Red means actively taking up resources. These are tasks executing in a thread,
  or intermediate results occupying memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blue means finished or released. These are already finished tasks, or data
  that's been released from memory because it's no longer needed&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/grid_search_schedule.gif" alt="Dask Graph Execution" style="width:100%"&gt;&lt;/p&gt;
&lt;p&gt;Looking at the trace, a few things stand out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We do a good job sharing intermediates. Each step in a pipeline is only fit
  once given the same parameters/data, resulting in some intermediates having
  many dependent tasks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The scheduler does a decent job of quickly finishing up tasks required to
  release data. This doesn't matter as much here (none of the intermediates
  take up much memory), but for other workloads this is very useful. See Matt
  Rocklin's &lt;a href="http://matthewrocklin.com/blog/work/2015/01/06/Towards-OOC-Scheduling"&gt;excellent blogpost
  here&lt;/a&gt;
  for more discussion on this.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Distributed grid search using dask-learn&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://dask.pydata.org/en/latest/scheduler-overview.html"&gt;schedulers&lt;/a&gt; used
in dask are configurable. The default (used above) is the threaded scheduler,
but we can just as easily swap it out for the distributed scheduler. Here I've
just spun up two local workers to demonstrate, but this works equally well
across multiple machines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;distributed&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Executor&lt;/span&gt;

&lt;span class="c1"&gt;# Create an Executor, and set it as the default scheduler&lt;/span&gt;
&lt;span class="n"&gt;exc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Executor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;10.0.0.3:8786&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;set_as_default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;exc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;Executor: scheduler=&amp;quot;10.0.0.3:8786&amp;quot; processes=2 cores=8&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CPU times: user 1.69 s, sys: 433 ms, total: 2.12 s
Wall time: 7.66 s
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt;
 &lt;span class="n"&gt;destimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=md_output&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;True
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Note that this is slightly slower than the threaded execution, so it doesn't
make sense for this workload, but for others it might.&lt;/p&gt;
&lt;h2&gt;What worked well&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://github.com/dask/dask-learn/blob/master/dklearn/grid_search.py"&gt;code for doing
  this&lt;/a&gt;
  is quite short.  There's also an implementation of
  &lt;a href="http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.RandomizedSearchCV.html"&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt;,
  which is only a few extra lines (hooray for good class hierarchies!).
  Instead of working with dask graphs directly, both implementations use
  &lt;a href="http://dask.pydata.org/en/latest/delayed.html"&gt;dask.delayed&lt;/a&gt; wherever
  possible, which also makes the code easy to read.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to the internal hashing used in dask (which is extensible!), duplicate
  computations are avoided.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since the graphs are separated from the scheduler, this works both locally
  and distributed with only a few extra lines.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Caveats and what could be better&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The scikit-learn api makes use of mutation (&lt;code&gt;est.fit(X, y)&lt;/code&gt; mutates &lt;code&gt;est&lt;/code&gt;),
  while dask collections are mostly immutable. After playing around with a few
  different ideas, I settled on dask-learn estimators being immutable (except
  for grid-search, more on this in a bit). This made the code easier to reason
  about, but does mean that you need to do &lt;code&gt;est = est.fit(X, y)&lt;/code&gt; when working
  with dask-learn estimators.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GridSearchCV&lt;/code&gt; posed a different problem. Due to the &lt;code&gt;refit&lt;/code&gt; keyword, the
  implementation can't be done in a single pass over the data. This means that
  we can't build a single graph describing both the grid search and the refit,
  which prevents it from being done lazily. I debated removing this keyword,
  but decided in the end to make &lt;code&gt;fit&lt;/code&gt; execute immediately. This means that
  there's a bit of a disconnect between &lt;code&gt;GridSearchCV&lt;/code&gt; and the other classes in
  the library, which I don't like. On the other hand, it does mean that this
  version of &lt;code&gt;GridSearchCV&lt;/code&gt; could be a drop-in for the sckit-learn one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The approach presented here is nice, but is really &lt;em&gt;only beneficial when
  there's duplicate work to be avoided, and that duplicate work is expensive&lt;/em&gt;.
  Repeating the above with only a single estimator (instead of a pipeline)
  results in identical (or slightly worse) performance than joblib. Similarly,
  if the repeated steps are cheap the difference in performance is much smaller
  (try the above using
  &lt;a href="http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectKBest.html"&gt;SelectKBest&lt;/a&gt;
  instead of &lt;code&gt;PCA&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The ability to swap easily from local to distributed execution is nice, but
  &lt;a href="http://distributed.readthedocs.io/en/latest/joblib.html"&gt;distributed also contains a joblib
  frontend&lt;/a&gt; that can
  do this just as easily.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Help&lt;/h2&gt;
&lt;p&gt;I am not a machine learning expert. Is any of this useful? Do you have
suggestions for improvements (or better yet PRs for improvements :))? Please
feel free to reach out in the comments below, or &lt;a href="https://github.com/dask/dask-learn"&gt;on
github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This work is supported by &lt;a href="http://continuum.io/"&gt;Continuum Analytics&lt;/a&gt; and the
&lt;a href="http://www.darpa.mil/program/XDATA"&gt;XDATA&lt;/a&gt; program as part of the &lt;a href="http://blaze.pydata.org/"&gt;Blaze
Project&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="dask"></category></entry></feed>